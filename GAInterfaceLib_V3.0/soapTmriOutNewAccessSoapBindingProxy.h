/* soapTmriOutNewAccessSoapBindingProxy.h
   Generated by gSOAP 2.7.17 from WebService.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapTmriOutNewAccessSoapBindingProxy_H
#define soapTmriOutNewAccessSoapBindingProxy_H
#include "soapH.h"
class TmriOutNewAccessSoapBinding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'TmriOutNewAccessSoapBinding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	TmriOutNewAccessSoapBinding()
	{ soap = soap_new(); endpoint = "http://192.168.2.60:9080/pnweb/services/TmriOutNewAccess"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"WS1", "http://endpoint.axis.framework.tmri.com", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~TmriOutNewAccessSoapBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'queryObjectOut' of service 'TmriOutNewAccessSoapBinding' and return error code (or SOAP_OK)
	virtual int WS1__queryObjectOut(std::wstring _xtlb, std::wstring _jkxlh, std::wstring _jkid, std::wstring _yhbz, std::wstring _dwmc, std::wstring _dwjgdm, std::wstring _yhxm, std::wstring _zdbs, std::wstring _UTF8XmlDoc, std::wstring &_queryObjectOutReturn) { return soap ? soap_call_WS1__queryObjectOut(soap, endpoint, NULL, _xtlb, _jkxlh, _jkid, _yhbz, _dwmc, _dwjgdm, _yhxm, _zdbs, _UTF8XmlDoc, _queryObjectOutReturn) : SOAP_EOM; };
	/// Invoke 'queryObjectOutNew' of service 'TmriOutNewAccessSoapBinding' and return error code (or SOAP_OK)
	virtual int WS1__queryObjectOutNew(std::wstring _xtlb, std::wstring _jkxlh, std::wstring _jkid, std::wstring _cjsqbh, std::wstring _dwjgdm, std::wstring _dwmc, std::wstring _yhbz, std::wstring _yhxm, std::wstring _zdbs, std::wstring _UTF8XmlDoc, std::wstring &_queryObjectOutNewReturn) { return soap ? soap_call_WS1__queryObjectOutNew(soap, endpoint, NULL, _xtlb, _jkxlh, _jkid, _cjsqbh, _dwjgdm, _dwmc, _yhbz, _yhxm, _zdbs, _UTF8XmlDoc, _queryObjectOutNewReturn) : SOAP_EOM; };
	/// Invoke 'writeObjectOut' of service 'TmriOutNewAccessSoapBinding' and return error code (or SOAP_OK)
	virtual int WS1__writeObjectOut(std::wstring _xtlb, std::wstring _jkxlh, std::wstring _jkid, std::wstring _yhbz, std::wstring _dwmc, std::wstring _dwjgdm, std::wstring _yhxm, std::wstring _zdbs, std::wstring _UTF8XmlDoc, std::wstring &_writeObjectOutReturn) { return soap ? soap_call_WS1__writeObjectOut(soap, endpoint, NULL, _xtlb, _jkxlh, _jkid, _yhbz, _dwmc, _dwjgdm, _yhxm, _zdbs, _UTF8XmlDoc, _writeObjectOutReturn) : SOAP_EOM; };
	/// Invoke 'writeObjectOutNew' of service 'TmriOutNewAccessSoapBinding' and return error code (or SOAP_OK)
	virtual int WS1__writeObjectOutNew(std::wstring _xtlb, std::wstring _jkxlh, std::wstring _jkid, std::wstring _cjsqbh, std::wstring _dwjgdm, std::wstring _dwmc, std::wstring _yhbz, std::wstring _yhxm, std::wstring _zdbs, std::wstring _UTF8XmlDoc, std::wstring &_writeObjectOutNewReturn) { return soap ? soap_call_WS1__writeObjectOutNew(soap, endpoint, NULL, _xtlb, _jkxlh, _jkid, _cjsqbh, _dwjgdm, _dwmc, _yhbz, _yhxm, _zdbs, _UTF8XmlDoc, _writeObjectOutNewReturn) : SOAP_EOM; };
};
#endif
