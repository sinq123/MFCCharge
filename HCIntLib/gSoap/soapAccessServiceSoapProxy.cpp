/* soapAccessServiceSoapProxy.cpp
   Generated by gSOAP 2.8.21 from AccessService.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapAccessServiceSoapProxy.h"

AccessServiceSoapProxy::AccessServiceSoapProxy()
{	AccessServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AccessServiceSoapProxy::AccessServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

AccessServiceSoapProxy::AccessServiceSoapProxy(const char *url)
{	AccessServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

AccessServiceSoapProxy::AccessServiceSoapProxy(soap_mode iomode)
{	AccessServiceSoapProxy_init(iomode, iomode);
}

AccessServiceSoapProxy::AccessServiceSoapProxy(const char *url, soap_mode iomode)
{	AccessServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

AccessServiceSoapProxy::AccessServiceSoapProxy(soap_mode imode, soap_mode omode)
{	AccessServiceSoapProxy_init(imode, omode);
}

AccessServiceSoapProxy::~AccessServiceSoapProxy()
{ }

void AccessServiceSoapProxy::AccessServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void AccessServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void AccessServiceSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	AccessServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AccessServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *AccessServiceSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *AccessServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *AccessServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *AccessServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int AccessServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int AccessServiceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void AccessServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AccessServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *AccessServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int AccessServiceSoapProxy::QueryService(const char *endpoint, const char *soap_action, _ns1__QueryService *ns1__QueryService, _ns1__QueryServiceResponse &ns1__QueryServiceResponse)
{	struct soap *soap = this;
	struct __ns1__QueryService soap_tmp___ns1__QueryService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/QueryService";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryService.ns1__QueryService = ns1__QueryService;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryService(soap, &soap_tmp___ns1__QueryService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryService(soap, &soap_tmp___ns1__QueryService, "-ns1:QueryService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryService(soap, &soap_tmp___ns1__QueryService, "-ns1:QueryService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryServiceResponse)
		return soap_closesock(soap);
	ns1__QueryServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryServiceResponse.soap_get(soap, "ns1:QueryServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::WriteService(const char *endpoint, const char *soap_action, _ns1__WriteService *ns1__WriteService, _ns1__WriteServiceResponse &ns1__WriteServiceResponse)
{	struct soap *soap = this;
	struct __ns1__WriteService soap_tmp___ns1__WriteService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/WriteService";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__WriteService.ns1__WriteService = ns1__WriteService;
	soap_serializeheader(soap);
	soap_serialize___ns1__WriteService(soap, &soap_tmp___ns1__WriteService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WriteService(soap, &soap_tmp___ns1__WriteService, "-ns1:WriteService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WriteService(soap, &soap_tmp___ns1__WriteService, "-ns1:WriteService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__WriteServiceResponse)
		return soap_closesock(soap);
	ns1__WriteServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WriteServiceResponse.soap_get(soap, "ns1:WriteServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::webEncodeUTF8(const char *endpoint, const char *soap_action, _ns1__webEncodeUTF8 *ns1__webEncodeUTF8, _ns1__webEncodeUTF8Response &ns1__webEncodeUTF8Response)
{	struct soap *soap = this;
	struct __ns1__webEncodeUTF8 soap_tmp___ns1__webEncodeUTF8;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/webEncodeUTF8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__webEncodeUTF8.ns1__webEncodeUTF8 = ns1__webEncodeUTF8;
	soap_serializeheader(soap);
	soap_serialize___ns1__webEncodeUTF8(soap, &soap_tmp___ns1__webEncodeUTF8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__webEncodeUTF8(soap, &soap_tmp___ns1__webEncodeUTF8, "-ns1:webEncodeUTF8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__webEncodeUTF8(soap, &soap_tmp___ns1__webEncodeUTF8, "-ns1:webEncodeUTF8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__webEncodeUTF8Response)
		return soap_closesock(soap);
	ns1__webEncodeUTF8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__webEncodeUTF8Response.soap_get(soap, "ns1:webEncodeUTF8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::webDecodeUTF8(const char *endpoint, const char *soap_action, _ns1__webDecodeUTF8 *ns1__webDecodeUTF8, _ns1__webDecodeUTF8Response &ns1__webDecodeUTF8Response)
{	struct soap *soap = this;
	struct __ns1__webDecodeUTF8 soap_tmp___ns1__webDecodeUTF8;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/webDecodeUTF8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__webDecodeUTF8.ns1__webDecodeUTF8 = ns1__webDecodeUTF8;
	soap_serializeheader(soap);
	soap_serialize___ns1__webDecodeUTF8(soap, &soap_tmp___ns1__webDecodeUTF8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__webDecodeUTF8(soap, &soap_tmp___ns1__webDecodeUTF8, "-ns1:webDecodeUTF8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__webDecodeUTF8(soap, &soap_tmp___ns1__webDecodeUTF8, "-ns1:webDecodeUTF8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__webDecodeUTF8Response)
		return soap_closesock(soap);
	ns1__webDecodeUTF8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__webDecodeUTF8Response.soap_get(soap, "ns1:webDecodeUTF8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::GetBase64(const char *endpoint, const char *soap_action, _ns1__GetBase64 *ns1__GetBase64, _ns1__GetBase64Response &ns1__GetBase64Response)
{	struct soap *soap = this;
	struct __ns1__GetBase64 soap_tmp___ns1__GetBase64;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetBase64";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBase64.ns1__GetBase64 = ns1__GetBase64;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBase64(soap, &soap_tmp___ns1__GetBase64);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBase64(soap, &soap_tmp___ns1__GetBase64, "-ns1:GetBase64", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBase64(soap, &soap_tmp___ns1__GetBase64, "-ns1:GetBase64", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetBase64Response)
		return soap_closesock(soap);
	ns1__GetBase64Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBase64Response.soap_get(soap, "ns1:GetBase64Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::QueryService_(const char *endpoint, const char *soap_action, _ns1__QueryService *ns1__QueryService, _ns1__QueryServiceResponse &ns1__QueryServiceResponse)
{	struct soap *soap = this;
	struct __ns1__QueryService_ soap_tmp___ns1__QueryService_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/QueryService";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryService_.ns1__QueryService = ns1__QueryService;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryService_(soap, &soap_tmp___ns1__QueryService_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryService_(soap, &soap_tmp___ns1__QueryService_, "-ns1:QueryService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryService_(soap, &soap_tmp___ns1__QueryService_, "-ns1:QueryService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryServiceResponse)
		return soap_closesock(soap);
	ns1__QueryServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryServiceResponse.soap_get(soap, "ns1:QueryServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::WriteService_(const char *endpoint, const char *soap_action, _ns1__WriteService *ns1__WriteService, _ns1__WriteServiceResponse &ns1__WriteServiceResponse)
{	struct soap *soap = this;
	struct __ns1__WriteService_ soap_tmp___ns1__WriteService_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/WriteService";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__WriteService_.ns1__WriteService = ns1__WriteService;
	soap_serializeheader(soap);
	soap_serialize___ns1__WriteService_(soap, &soap_tmp___ns1__WriteService_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WriteService_(soap, &soap_tmp___ns1__WriteService_, "-ns1:WriteService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WriteService_(soap, &soap_tmp___ns1__WriteService_, "-ns1:WriteService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__WriteServiceResponse)
		return soap_closesock(soap);
	ns1__WriteServiceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WriteServiceResponse.soap_get(soap, "ns1:WriteServiceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::webEncodeUTF8_(const char *endpoint, const char *soap_action, _ns1__webEncodeUTF8 *ns1__webEncodeUTF8, _ns1__webEncodeUTF8Response &ns1__webEncodeUTF8Response)
{	struct soap *soap = this;
	struct __ns1__webEncodeUTF8_ soap_tmp___ns1__webEncodeUTF8_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/webEncodeUTF8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__webEncodeUTF8_.ns1__webEncodeUTF8 = ns1__webEncodeUTF8;
	soap_serializeheader(soap);
	soap_serialize___ns1__webEncodeUTF8_(soap, &soap_tmp___ns1__webEncodeUTF8_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__webEncodeUTF8_(soap, &soap_tmp___ns1__webEncodeUTF8_, "-ns1:webEncodeUTF8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__webEncodeUTF8_(soap, &soap_tmp___ns1__webEncodeUTF8_, "-ns1:webEncodeUTF8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__webEncodeUTF8Response)
		return soap_closesock(soap);
	ns1__webEncodeUTF8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__webEncodeUTF8Response.soap_get(soap, "ns1:webEncodeUTF8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::webDecodeUTF8_(const char *endpoint, const char *soap_action, _ns1__webDecodeUTF8 *ns1__webDecodeUTF8, _ns1__webDecodeUTF8Response &ns1__webDecodeUTF8Response)
{	struct soap *soap = this;
	struct __ns1__webDecodeUTF8_ soap_tmp___ns1__webDecodeUTF8_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/webDecodeUTF8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__webDecodeUTF8_.ns1__webDecodeUTF8 = ns1__webDecodeUTF8;
	soap_serializeheader(soap);
	soap_serialize___ns1__webDecodeUTF8_(soap, &soap_tmp___ns1__webDecodeUTF8_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__webDecodeUTF8_(soap, &soap_tmp___ns1__webDecodeUTF8_, "-ns1:webDecodeUTF8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__webDecodeUTF8_(soap, &soap_tmp___ns1__webDecodeUTF8_, "-ns1:webDecodeUTF8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__webDecodeUTF8Response)
		return soap_closesock(soap);
	ns1__webDecodeUTF8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__webDecodeUTF8Response.soap_get(soap, "ns1:webDecodeUTF8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessServiceSoapProxy::GetBase64_(const char *endpoint, const char *soap_action, _ns1__GetBase64 *ns1__GetBase64, _ns1__GetBase64Response &ns1__GetBase64Response)
{	struct soap *soap = this;
	struct __ns1__GetBase64_ soap_tmp___ns1__GetBase64_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.100.9.100:83/Services/AccessService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetBase64";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBase64_.ns1__GetBase64 = ns1__GetBase64;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBase64_(soap, &soap_tmp___ns1__GetBase64_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBase64_(soap, &soap_tmp___ns1__GetBase64_, "-ns1:GetBase64", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBase64_(soap, &soap_tmp___ns1__GetBase64_, "-ns1:GetBase64", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetBase64Response)
		return soap_closesock(soap);
	ns1__GetBase64Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBase64Response.soap_get(soap, "ns1:GetBase64Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
