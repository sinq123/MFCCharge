/* TmriOutAccess.h
   Generated by wsdl2h 2.8.21 from TmriOutAccess.wsdl and typemap.dat
   2020-09-07 07:44:23 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on TmriOutAccess.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.hg-banner.com.cn/                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.hg-banner.com.cn/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.hg-banner.com.cn/"
//gsoap ns1   schema namespace:	http://www.hg-banner.com.cn/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class _ns1__queryObjectOut.
class _ns1__queryObjectOut;

//  Forward declaration of class _ns1__queryObjectOutResponse.
class _ns1__queryObjectOutResponse;

//  Forward declaration of class _ns1__QueryObjectOutRequest.
class _ns1__QueryObjectOutRequest;

//  Forward declaration of class _ns1__QueryObjectOutRequestResponse.
class _ns1__QueryObjectOutRequestResponse;

//  Forward declaration of class _ns1__QueryObjectOutResult.
class _ns1__QueryObjectOutResult;

//  Forward declaration of class _ns1__QueryObjectOutResultResponse.
class _ns1__QueryObjectOutResultResponse;

//  Forward declaration of class _ns1__writeObjectOut.
class _ns1__writeObjectOut;

//  Forward declaration of class _ns1__writeObjectOutResponse.
class _ns1__writeObjectOutResponse;

//  Forward declaration of class _ns1__WriteObjectOutRequest.
class _ns1__WriteObjectOutRequest;

//  Forward declaration of class _ns1__WriteObjectOutRequestResponse.
class _ns1__WriteObjectOutRequestResponse;

//  Forward declaration of class _ns1__WriteObjectOutResult.
class _ns1__WriteObjectOutResult;

//  Forward declaration of class _ns1__WriteObjectOutResultResponse.
class _ns1__WriteObjectOutResultResponse;

//  Forward declaration of class _ns1__uploadLog.
class _ns1__uploadLog;

//  Forward declaration of class _ns1__uploadLogResponse.
class _ns1__uploadLogResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.hg-banner.com.cn/                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.hg-banner.com.cn/                                             *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.hg-banner.com.cn/":queryObjectOut
/// @brief "http://www.hg-banner.com.cn/":queryObjectOut is a complexType.
///
/// class _ns1__queryObjectOut operations:
/// - soap_new__ns1__queryObjectOut(soap*) allocate
/// - soap_new__ns1__queryObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__queryObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__queryObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__queryObjectOut(soap*, _ns1__queryObjectOut*) deserialize from a stream
/// - int soap_write__ns1__queryObjectOut(soap, _ns1__queryObjectOut*) serialize to a stream
class _ns1__queryObjectOut
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "QueryXmlDoc" of XSD type xs:string.
    std::wstring*                        QueryXmlDoc                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":queryObjectOutResponse
/// @brief "http://www.hg-banner.com.cn/":queryObjectOutResponse is a complexType.
///
/// class _ns1__queryObjectOutResponse operations:
/// - soap_new__ns1__queryObjectOutResponse(soap*) allocate
/// - soap_new__ns1__queryObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__queryObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__queryObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__queryObjectOutResponse(soap*, _ns1__queryObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__queryObjectOutResponse(soap, _ns1__queryObjectOutResponse*) serialize to a stream
class _ns1__queryObjectOutResponse
{ public:
/// Element "queryObjectOutResult" of XSD type xs:string.
    std::wstring*                        queryObjectOutResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":QueryObjectOutRequest
/// @brief "http://www.hg-banner.com.cn/":QueryObjectOutRequest is a complexType.
///
/// class _ns1__QueryObjectOutRequest operations:
/// - soap_new__ns1__QueryObjectOutRequest(soap*) allocate
/// - soap_new__ns1__QueryObjectOutRequest(soap*, int num) allocate array
/// - soap_new_req__ns1__QueryObjectOutRequest(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__QueryObjectOutRequest(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__QueryObjectOutRequest(soap*, _ns1__QueryObjectOutRequest*) deserialize from a stream
/// - int soap_write__ns1__QueryObjectOutRequest(soap, _ns1__QueryObjectOutRequest*) serialize to a stream
class _ns1__QueryObjectOutRequest
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "cjsqbh" of XSD type xs:string.
    std::wstring*                        cjsqbh                         0;	///< Optional element.
/// Element "dwjgdm" of XSD type xs:string.
    std::wstring*                        dwjgdm                         0;	///< Optional element.
/// Element "dwmc" of XSD type xs:string.
    std::wstring*                        dwmc                           0;	///< Optional element.
/// Element "yhbz" of XSD type xs:string.
    std::wstring*                        yhbz                           0;	///< Optional element.
/// Element "yhxm" of XSD type xs:string.
    std::wstring*                        yhxm                           0;	///< Optional element.
/// Element "zdbs" of XSD type xs:string.
    std::wstring*                        zdbs                           0;	///< Optional element.
/// Element "sendXmlDoc" of XSD type xs:string.
    std::wstring*                        sendXmlDoc                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":QueryObjectOutRequestResponse
/// @brief "http://www.hg-banner.com.cn/":QueryObjectOutRequestResponse is a complexType.
///
/// class _ns1__QueryObjectOutRequestResponse operations:
/// - soap_new__ns1__QueryObjectOutRequestResponse(soap*) allocate
/// - soap_new__ns1__QueryObjectOutRequestResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__QueryObjectOutRequestResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__QueryObjectOutRequestResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__QueryObjectOutRequestResponse(soap*, _ns1__QueryObjectOutRequestResponse*) deserialize from a stream
/// - int soap_write__ns1__QueryObjectOutRequestResponse(soap, _ns1__QueryObjectOutRequestResponse*) serialize to a stream
class _ns1__QueryObjectOutRequestResponse
{ public:
/// Element "QueryObjectOutRequestResult" of XSD type xs:string.
    std::wstring*                        QueryObjectOutRequestResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":QueryObjectOutResult
/// @brief "http://www.hg-banner.com.cn/":QueryObjectOutResult is a complexType.
///
/// class _ns1__QueryObjectOutResult operations:
/// - soap_new__ns1__QueryObjectOutResult(soap*) allocate
/// - soap_new__ns1__QueryObjectOutResult(soap*, int num) allocate array
/// - soap_new_req__ns1__QueryObjectOutResult(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__QueryObjectOutResult(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__QueryObjectOutResult(soap*, _ns1__QueryObjectOutResult*) deserialize from a stream
/// - int soap_write__ns1__QueryObjectOutResult(soap, _ns1__QueryObjectOutResult*) serialize to a stream
class _ns1__QueryObjectOutResult
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "cjsqbh" of XSD type xs:string.
    std::wstring*                        cjsqbh                         0;	///< Optional element.
/// Element "dwjgdm" of XSD type xs:string.
    std::wstring*                        dwjgdm                         0;	///< Optional element.
/// Element "dwmc" of XSD type xs:string.
    std::wstring*                        dwmc                           0;	///< Optional element.
/// Element "yhbz" of XSD type xs:string.
    std::wstring*                        yhbz                           0;	///< Optional element.
/// Element "yhxm" of XSD type xs:string.
    std::wstring*                        yhxm                           0;	///< Optional element.
/// Element "zdbs" of XSD type xs:string.
    std::wstring*                        zdbs                           0;	///< Optional element.
/// Element "requestid" of XSD type xs:string.
    std::wstring*                        requestid                      0;	///< Optional element.
/// Element "sendXmlDoc" of XSD type xs:string.
    std::wstring*                        sendXmlDoc                     0;	///< Optional element.
/// Element "resultXmlDoc" of XSD type xs:string.
    std::wstring*                        resultXmlDoc                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":QueryObjectOutResultResponse
/// @brief "http://www.hg-banner.com.cn/":QueryObjectOutResultResponse is a complexType.
///
/// class _ns1__QueryObjectOutResultResponse operations:
/// - soap_new__ns1__QueryObjectOutResultResponse(soap*) allocate
/// - soap_new__ns1__QueryObjectOutResultResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__QueryObjectOutResultResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__QueryObjectOutResultResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__QueryObjectOutResultResponse(soap*, _ns1__QueryObjectOutResultResponse*) deserialize from a stream
/// - int soap_write__ns1__QueryObjectOutResultResponse(soap, _ns1__QueryObjectOutResultResponse*) serialize to a stream
class _ns1__QueryObjectOutResultResponse
{ public:
/// Element "QueryObjectOutResultResult" of XSD type xs:string.
    std::wstring*                        QueryObjectOutResultResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":writeObjectOut
/// @brief "http://www.hg-banner.com.cn/":writeObjectOut is a complexType.
///
/// class _ns1__writeObjectOut operations:
/// - soap_new__ns1__writeObjectOut(soap*) allocate
/// - soap_new__ns1__writeObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__writeObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__writeObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__writeObjectOut(soap*, _ns1__writeObjectOut*) deserialize from a stream
/// - int soap_write__ns1__writeObjectOut(soap, _ns1__writeObjectOut*) serialize to a stream
class _ns1__writeObjectOut
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "WriteXmlDoc" of XSD type xs:string.
    std::wstring*                        WriteXmlDoc                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":writeObjectOutResponse
/// @brief "http://www.hg-banner.com.cn/":writeObjectOutResponse is a complexType.
///
/// class _ns1__writeObjectOutResponse operations:
/// - soap_new__ns1__writeObjectOutResponse(soap*) allocate
/// - soap_new__ns1__writeObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__writeObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__writeObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__writeObjectOutResponse(soap*, _ns1__writeObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__writeObjectOutResponse(soap, _ns1__writeObjectOutResponse*) serialize to a stream
class _ns1__writeObjectOutResponse
{ public:
/// Element "writeObjectOutResult" of XSD type xs:string.
    std::wstring*                        writeObjectOutResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":WriteObjectOutRequest
/// @brief "http://www.hg-banner.com.cn/":WriteObjectOutRequest is a complexType.
///
/// class _ns1__WriteObjectOutRequest operations:
/// - soap_new__ns1__WriteObjectOutRequest(soap*) allocate
/// - soap_new__ns1__WriteObjectOutRequest(soap*, int num) allocate array
/// - soap_new_req__ns1__WriteObjectOutRequest(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__WriteObjectOutRequest(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__WriteObjectOutRequest(soap*, _ns1__WriteObjectOutRequest*) deserialize from a stream
/// - int soap_write__ns1__WriteObjectOutRequest(soap, _ns1__WriteObjectOutRequest*) serialize to a stream
class _ns1__WriteObjectOutRequest
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "cjsqbh" of XSD type xs:string.
    std::wstring*                        cjsqbh                         0;	///< Optional element.
/// Element "dwjgdm" of XSD type xs:string.
    std::wstring*                        dwjgdm                         0;	///< Optional element.
/// Element "dwmc" of XSD type xs:string.
    std::wstring*                        dwmc                           0;	///< Optional element.
/// Element "yhbz" of XSD type xs:string.
    std::wstring*                        yhbz                           0;	///< Optional element.
/// Element "yhxm" of XSD type xs:string.
    std::wstring*                        yhxm                           0;	///< Optional element.
/// Element "zdbs" of XSD type xs:string.
    std::wstring*                        zdbs                           0;	///< Optional element.
/// Element "sendXmlDoc" of XSD type xs:string.
    std::wstring*                        sendXmlDoc                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":WriteObjectOutRequestResponse
/// @brief "http://www.hg-banner.com.cn/":WriteObjectOutRequestResponse is a complexType.
///
/// class _ns1__WriteObjectOutRequestResponse operations:
/// - soap_new__ns1__WriteObjectOutRequestResponse(soap*) allocate
/// - soap_new__ns1__WriteObjectOutRequestResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__WriteObjectOutRequestResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__WriteObjectOutRequestResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__WriteObjectOutRequestResponse(soap*, _ns1__WriteObjectOutRequestResponse*) deserialize from a stream
/// - int soap_write__ns1__WriteObjectOutRequestResponse(soap, _ns1__WriteObjectOutRequestResponse*) serialize to a stream
class _ns1__WriteObjectOutRequestResponse
{ public:
/// Element "WriteObjectOutRequestResult" of XSD type xs:string.
    std::wstring*                        WriteObjectOutRequestResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":WriteObjectOutResult
/// @brief "http://www.hg-banner.com.cn/":WriteObjectOutResult is a complexType.
///
/// class _ns1__WriteObjectOutResult operations:
/// - soap_new__ns1__WriteObjectOutResult(soap*) allocate
/// - soap_new__ns1__WriteObjectOutResult(soap*, int num) allocate array
/// - soap_new_req__ns1__WriteObjectOutResult(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__WriteObjectOutResult(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__WriteObjectOutResult(soap*, _ns1__WriteObjectOutResult*) deserialize from a stream
/// - int soap_write__ns1__WriteObjectOutResult(soap, _ns1__WriteObjectOutResult*) serialize to a stream
class _ns1__WriteObjectOutResult
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "cjsqbh" of XSD type xs:string.
    std::wstring*                        cjsqbh                         0;	///< Optional element.
/// Element "dwjgdm" of XSD type xs:string.
    std::wstring*                        dwjgdm                         0;	///< Optional element.
/// Element "dwmc" of XSD type xs:string.
    std::wstring*                        dwmc                           0;	///< Optional element.
/// Element "yhbz" of XSD type xs:string.
    std::wstring*                        yhbz                           0;	///< Optional element.
/// Element "yhxm" of XSD type xs:string.
    std::wstring*                        yhxm                           0;	///< Optional element.
/// Element "zdbs" of XSD type xs:string.
    std::wstring*                        zdbs                           0;	///< Optional element.
/// Element "requestid" of XSD type xs:string.
    std::wstring*                        requestid                      0;	///< Optional element.
/// Element "sendXmlDoc" of XSD type xs:string.
    std::wstring*                        sendXmlDoc                     0;	///< Optional element.
/// Element "resultXmlDoc" of XSD type xs:string.
    std::wstring*                        resultXmlDoc                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":WriteObjectOutResultResponse
/// @brief "http://www.hg-banner.com.cn/":WriteObjectOutResultResponse is a complexType.
///
/// class _ns1__WriteObjectOutResultResponse operations:
/// - soap_new__ns1__WriteObjectOutResultResponse(soap*) allocate
/// - soap_new__ns1__WriteObjectOutResultResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__WriteObjectOutResultResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__WriteObjectOutResultResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__WriteObjectOutResultResponse(soap*, _ns1__WriteObjectOutResultResponse*) deserialize from a stream
/// - int soap_write__ns1__WriteObjectOutResultResponse(soap, _ns1__WriteObjectOutResultResponse*) serialize to a stream
class _ns1__WriteObjectOutResultResponse
{ public:
/// Element "WriteObjectOutResultResult" of XSD type xs:string.
    std::wstring*                        WriteObjectOutResultResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":uploadLog
/// @brief "http://www.hg-banner.com.cn/":uploadLog is a complexType.
///
/// class _ns1__uploadLog operations:
/// - soap_new__ns1__uploadLog(soap*) allocate
/// - soap_new__ns1__uploadLog(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadLog(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadLog(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadLog(soap*, _ns1__uploadLog*) deserialize from a stream
/// - int soap_write__ns1__uploadLog(soap, _ns1__uploadLog*) serialize to a stream
class _ns1__uploadLog
{ public:
/// Element "log" of XSD type xs:string.
    std::wstring*                        log                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hg-banner.com.cn/":uploadLogResponse
/// @brief "http://www.hg-banner.com.cn/":uploadLogResponse is a complexType.
///
/// class _ns1__uploadLogResponse operations:
/// - soap_new__ns1__uploadLogResponse(soap*) allocate
/// - soap_new__ns1__uploadLogResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadLogResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadLogResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadLogResponse(soap*, _ns1__uploadLogResponse*) deserialize from a stream
/// - int soap_write__ns1__uploadLogResponse(soap, _ns1__uploadLogResponse*) serialize to a stream
class _ns1__uploadLogResponse
{ public:
/// Element "uploadLogResult" of XSD type xs:string.
    std::wstring*                        uploadLogResult                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.hg-banner.com.cn/                                             *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.hg-banner.com.cn/":string of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.hg-banner.com.cn/                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	TmriOutAccessSoap 
//gsoap ns1  service type:	TmriOutAccessSoap 
//gsoap ns1  service port:	http://localhost:10020/TmriOutAccess.asmx 
//gsoap ns1  service namespace:	http://www.hg-banner.com.cn/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref TmriOutAccessSoap

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page TmriOutAccessSoap Binding "TmriOutAccessSoap"

@section TmriOutAccessSoap_operations Operations of Binding "TmriOutAccessSoap"

  - @ref __ns1__queryObjectOut

  - @ref __ns1__QueryObjectOutRequest

  - @ref __ns1__QueryObjectOutResult

  - @ref __ns1__writeObjectOut

  - @ref __ns1__WriteObjectOutRequest

  - @ref __ns1__WriteObjectOutResult

  - @ref __ns1__uploadLog

  - @ref __ns1__queryObjectOut_

  - @ref __ns1__QueryObjectOutRequest_

  - @ref __ns1__QueryObjectOutResult_

  - @ref __ns1__writeObjectOut_

  - @ref __ns1__WriteObjectOutRequest_

  - @ref __ns1__WriteObjectOutResult_

  - @ref __ns1__uploadLog_

@section TmriOutAccessSoap_ports Endpoints of Binding "TmriOutAccessSoap"

  - http://localhost:10020/TmriOutAccess.asmx

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TmriOutAccessSoap                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryObjectOut                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__queryObjectOut" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/queryObjectOut"

  - Addressing input action: "http://www.hg-banner.com.cn/queryObjectOut"

  - Addressing output action: "http://www.hg-banner.com.cn/queryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	queryObjectOut SOAP
//gsoap ns1  service method-style:	queryObjectOut document
//gsoap ns1  service method-encoding:	queryObjectOut literal
//gsoap ns1  service method-input-action:	queryObjectOut http://www.hg-banner.com.cn/queryObjectOut
//gsoap ns1  service method-output-action:	queryObjectOut http://www.hg-banner.com.cn/queryObjectOutResponse
int __ns1__queryObjectOut(
    _ns1__queryObjectOut*               ns1__queryObjectOut,	///< Input parameter
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__QueryObjectOutRequest                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__QueryObjectOutRequest" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/QueryObjectOutRequest"

  - Addressing input action: "http://www.hg-banner.com.cn/QueryObjectOutRequest"

  - Addressing output action: "http://www.hg-banner.com.cn/QueryObjectOutRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__QueryObjectOutRequest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__QueryObjectOutRequest*        ns1__QueryObjectOutRequest,
    // output parameters:
    _ns1__QueryObjectOutRequestResponse&ns1__QueryObjectOutRequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__QueryObjectOutRequest(
    struct soap *soap,
    // input parameters:
    _ns1__QueryObjectOutRequest*        ns1__QueryObjectOutRequest,
    // output parameters:
    _ns1__QueryObjectOutRequestResponse&ns1__QueryObjectOutRequestResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	QueryObjectOutRequest SOAP
//gsoap ns1  service method-style:	QueryObjectOutRequest document
//gsoap ns1  service method-encoding:	QueryObjectOutRequest literal
//gsoap ns1  service method-input-action:	QueryObjectOutRequest http://www.hg-banner.com.cn/QueryObjectOutRequest
//gsoap ns1  service method-output-action:	QueryObjectOutRequest http://www.hg-banner.com.cn/QueryObjectOutRequestResponse
int __ns1__QueryObjectOutRequest(
    _ns1__QueryObjectOutRequest*        ns1__QueryObjectOutRequest,	///< Input parameter
    _ns1__QueryObjectOutRequestResponse&ns1__QueryObjectOutRequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__QueryObjectOutResult                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__QueryObjectOutResult" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/QueryObjectOutResult"

  - Addressing input action: "http://www.hg-banner.com.cn/QueryObjectOutResult"

  - Addressing output action: "http://www.hg-banner.com.cn/QueryObjectOutResultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__QueryObjectOutResult(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__QueryObjectOutResult*         ns1__QueryObjectOutResult,
    // output parameters:
    _ns1__QueryObjectOutResultResponse &ns1__QueryObjectOutResultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__QueryObjectOutResult(
    struct soap *soap,
    // input parameters:
    _ns1__QueryObjectOutResult*         ns1__QueryObjectOutResult,
    // output parameters:
    _ns1__QueryObjectOutResultResponse &ns1__QueryObjectOutResultResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	QueryObjectOutResult SOAP
//gsoap ns1  service method-style:	QueryObjectOutResult document
//gsoap ns1  service method-encoding:	QueryObjectOutResult literal
//gsoap ns1  service method-input-action:	QueryObjectOutResult http://www.hg-banner.com.cn/QueryObjectOutResult
//gsoap ns1  service method-output-action:	QueryObjectOutResult http://www.hg-banner.com.cn/QueryObjectOutResultResponse
int __ns1__QueryObjectOutResult(
    _ns1__QueryObjectOutResult*         ns1__QueryObjectOutResult,	///< Input parameter
    _ns1__QueryObjectOutResultResponse &ns1__QueryObjectOutResultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__writeObjectOut                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__writeObjectOut" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/writeObjectOut"

  - Addressing input action: "http://www.hg-banner.com.cn/writeObjectOut"

  - Addressing output action: "http://www.hg-banner.com.cn/writeObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__writeObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__writeObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	writeObjectOut SOAP
//gsoap ns1  service method-style:	writeObjectOut document
//gsoap ns1  service method-encoding:	writeObjectOut literal
//gsoap ns1  service method-input-action:	writeObjectOut http://www.hg-banner.com.cn/writeObjectOut
//gsoap ns1  service method-output-action:	writeObjectOut http://www.hg-banner.com.cn/writeObjectOutResponse
int __ns1__writeObjectOut(
    _ns1__writeObjectOut*               ns1__writeObjectOut,	///< Input parameter
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__WriteObjectOutRequest                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__WriteObjectOutRequest" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/WriteObjectOutRequest"

  - Addressing input action: "http://www.hg-banner.com.cn/WriteObjectOutRequest"

  - Addressing output action: "http://www.hg-banner.com.cn/WriteObjectOutRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__WriteObjectOutRequest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__WriteObjectOutRequest*        ns1__WriteObjectOutRequest,
    // output parameters:
    _ns1__WriteObjectOutRequestResponse&ns1__WriteObjectOutRequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__WriteObjectOutRequest(
    struct soap *soap,
    // input parameters:
    _ns1__WriteObjectOutRequest*        ns1__WriteObjectOutRequest,
    // output parameters:
    _ns1__WriteObjectOutRequestResponse&ns1__WriteObjectOutRequestResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	WriteObjectOutRequest SOAP
//gsoap ns1  service method-style:	WriteObjectOutRequest document
//gsoap ns1  service method-encoding:	WriteObjectOutRequest literal
//gsoap ns1  service method-input-action:	WriteObjectOutRequest http://www.hg-banner.com.cn/WriteObjectOutRequest
//gsoap ns1  service method-output-action:	WriteObjectOutRequest http://www.hg-banner.com.cn/WriteObjectOutRequestResponse
int __ns1__WriteObjectOutRequest(
    _ns1__WriteObjectOutRequest*        ns1__WriteObjectOutRequest,	///< Input parameter
    _ns1__WriteObjectOutRequestResponse&ns1__WriteObjectOutRequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__WriteObjectOutResult                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__WriteObjectOutResult" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/WriteObjectOutResult"

  - Addressing input action: "http://www.hg-banner.com.cn/WriteObjectOutResult"

  - Addressing output action: "http://www.hg-banner.com.cn/WriteObjectOutResultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__WriteObjectOutResult(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__WriteObjectOutResult*         ns1__WriteObjectOutResult,
    // output parameters:
    _ns1__WriteObjectOutResultResponse &ns1__WriteObjectOutResultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__WriteObjectOutResult(
    struct soap *soap,
    // input parameters:
    _ns1__WriteObjectOutResult*         ns1__WriteObjectOutResult,
    // output parameters:
    _ns1__WriteObjectOutResultResponse &ns1__WriteObjectOutResultResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	WriteObjectOutResult SOAP
//gsoap ns1  service method-style:	WriteObjectOutResult document
//gsoap ns1  service method-encoding:	WriteObjectOutResult literal
//gsoap ns1  service method-input-action:	WriteObjectOutResult http://www.hg-banner.com.cn/WriteObjectOutResult
//gsoap ns1  service method-output-action:	WriteObjectOutResult http://www.hg-banner.com.cn/WriteObjectOutResultResponse
int __ns1__WriteObjectOutResult(
    _ns1__WriteObjectOutResult*         ns1__WriteObjectOutResult,	///< Input parameter
    _ns1__WriteObjectOutResultResponse &ns1__WriteObjectOutResultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__uploadLog                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__uploadLog" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/uploadLog"

  - Addressing input action: "http://www.hg-banner.com.cn/uploadLog"

  - Addressing output action: "http://www.hg-banner.com.cn/uploadLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__uploadLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__uploadLog*                    ns1__uploadLog,
    // output parameters:
    _ns1__uploadLogResponse            &ns1__uploadLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__uploadLog(
    struct soap *soap,
    // input parameters:
    _ns1__uploadLog*                    ns1__uploadLog,
    // output parameters:
    _ns1__uploadLogResponse            &ns1__uploadLogResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	uploadLog SOAP
//gsoap ns1  service method-style:	uploadLog document
//gsoap ns1  service method-encoding:	uploadLog literal
//gsoap ns1  service method-input-action:	uploadLog http://www.hg-banner.com.cn/uploadLog
//gsoap ns1  service method-output-action:	uploadLog http://www.hg-banner.com.cn/uploadLogResponse
int __ns1__uploadLog(
    _ns1__uploadLog*                    ns1__uploadLog,	///< Input parameter
    _ns1__uploadLogResponse            &ns1__uploadLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryObjectOut_                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__queryObjectOut_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/queryObjectOut"

  - Addressing input action: "http://www.hg-banner.com.cn/queryObjectOut"

  - Addressing output action: "http://www.hg-banner.com.cn/queryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	queryObjectOut_ SOAP
//gsoap ns1  service method-style:	queryObjectOut_ document
//gsoap ns1  service method-encoding:	queryObjectOut_ literal
//gsoap ns1  service method-input-action:	queryObjectOut_ http://www.hg-banner.com.cn/queryObjectOut
//gsoap ns1  service method-output-action:	queryObjectOut_ http://www.hg-banner.com.cn/queryObjectOutResponse
int __ns1__queryObjectOut_(
    _ns1__queryObjectOut*               ns1__queryObjectOut,	///< Input parameter
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__QueryObjectOutRequest_                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__QueryObjectOutRequest_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/QueryObjectOutRequest"

  - Addressing input action: "http://www.hg-banner.com.cn/QueryObjectOutRequest"

  - Addressing output action: "http://www.hg-banner.com.cn/QueryObjectOutRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__QueryObjectOutRequest_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__QueryObjectOutRequest*        ns1__QueryObjectOutRequest,
    // output parameters:
    _ns1__QueryObjectOutRequestResponse&ns1__QueryObjectOutRequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__QueryObjectOutRequest_(
    struct soap *soap,
    // input parameters:
    _ns1__QueryObjectOutRequest*        ns1__QueryObjectOutRequest,
    // output parameters:
    _ns1__QueryObjectOutRequestResponse&ns1__QueryObjectOutRequestResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	QueryObjectOutRequest_ SOAP
//gsoap ns1  service method-style:	QueryObjectOutRequest_ document
//gsoap ns1  service method-encoding:	QueryObjectOutRequest_ literal
//gsoap ns1  service method-input-action:	QueryObjectOutRequest_ http://www.hg-banner.com.cn/QueryObjectOutRequest
//gsoap ns1  service method-output-action:	QueryObjectOutRequest_ http://www.hg-banner.com.cn/QueryObjectOutRequestResponse
int __ns1__QueryObjectOutRequest_(
    _ns1__QueryObjectOutRequest*        ns1__QueryObjectOutRequest,	///< Input parameter
    _ns1__QueryObjectOutRequestResponse&ns1__QueryObjectOutRequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__QueryObjectOutResult_                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__QueryObjectOutResult_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/QueryObjectOutResult"

  - Addressing input action: "http://www.hg-banner.com.cn/QueryObjectOutResult"

  - Addressing output action: "http://www.hg-banner.com.cn/QueryObjectOutResultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__QueryObjectOutResult_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__QueryObjectOutResult*         ns1__QueryObjectOutResult,
    // output parameters:
    _ns1__QueryObjectOutResultResponse &ns1__QueryObjectOutResultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__QueryObjectOutResult_(
    struct soap *soap,
    // input parameters:
    _ns1__QueryObjectOutResult*         ns1__QueryObjectOutResult,
    // output parameters:
    _ns1__QueryObjectOutResultResponse &ns1__QueryObjectOutResultResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	QueryObjectOutResult_ SOAP
//gsoap ns1  service method-style:	QueryObjectOutResult_ document
//gsoap ns1  service method-encoding:	QueryObjectOutResult_ literal
//gsoap ns1  service method-input-action:	QueryObjectOutResult_ http://www.hg-banner.com.cn/QueryObjectOutResult
//gsoap ns1  service method-output-action:	QueryObjectOutResult_ http://www.hg-banner.com.cn/QueryObjectOutResultResponse
int __ns1__QueryObjectOutResult_(
    _ns1__QueryObjectOutResult*         ns1__QueryObjectOutResult,	///< Input parameter
    _ns1__QueryObjectOutResultResponse &ns1__QueryObjectOutResultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__writeObjectOut_                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__writeObjectOut_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/writeObjectOut"

  - Addressing input action: "http://www.hg-banner.com.cn/writeObjectOut"

  - Addressing output action: "http://www.hg-banner.com.cn/writeObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__writeObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__writeObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	writeObjectOut_ SOAP
//gsoap ns1  service method-style:	writeObjectOut_ document
//gsoap ns1  service method-encoding:	writeObjectOut_ literal
//gsoap ns1  service method-input-action:	writeObjectOut_ http://www.hg-banner.com.cn/writeObjectOut
//gsoap ns1  service method-output-action:	writeObjectOut_ http://www.hg-banner.com.cn/writeObjectOutResponse
int __ns1__writeObjectOut_(
    _ns1__writeObjectOut*               ns1__writeObjectOut,	///< Input parameter
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__WriteObjectOutRequest_                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__WriteObjectOutRequest_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/WriteObjectOutRequest"

  - Addressing input action: "http://www.hg-banner.com.cn/WriteObjectOutRequest"

  - Addressing output action: "http://www.hg-banner.com.cn/WriteObjectOutRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__WriteObjectOutRequest_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__WriteObjectOutRequest*        ns1__WriteObjectOutRequest,
    // output parameters:
    _ns1__WriteObjectOutRequestResponse&ns1__WriteObjectOutRequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__WriteObjectOutRequest_(
    struct soap *soap,
    // input parameters:
    _ns1__WriteObjectOutRequest*        ns1__WriteObjectOutRequest,
    // output parameters:
    _ns1__WriteObjectOutRequestResponse&ns1__WriteObjectOutRequestResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	WriteObjectOutRequest_ SOAP
//gsoap ns1  service method-style:	WriteObjectOutRequest_ document
//gsoap ns1  service method-encoding:	WriteObjectOutRequest_ literal
//gsoap ns1  service method-input-action:	WriteObjectOutRequest_ http://www.hg-banner.com.cn/WriteObjectOutRequest
//gsoap ns1  service method-output-action:	WriteObjectOutRequest_ http://www.hg-banner.com.cn/WriteObjectOutRequestResponse
int __ns1__WriteObjectOutRequest_(
    _ns1__WriteObjectOutRequest*        ns1__WriteObjectOutRequest,	///< Input parameter
    _ns1__WriteObjectOutRequestResponse&ns1__WriteObjectOutRequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__WriteObjectOutResult_                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__WriteObjectOutResult_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/WriteObjectOutResult"

  - Addressing input action: "http://www.hg-banner.com.cn/WriteObjectOutResult"

  - Addressing output action: "http://www.hg-banner.com.cn/WriteObjectOutResultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__WriteObjectOutResult_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__WriteObjectOutResult*         ns1__WriteObjectOutResult,
    // output parameters:
    _ns1__WriteObjectOutResultResponse &ns1__WriteObjectOutResultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__WriteObjectOutResult_(
    struct soap *soap,
    // input parameters:
    _ns1__WriteObjectOutResult*         ns1__WriteObjectOutResult,
    // output parameters:
    _ns1__WriteObjectOutResultResponse &ns1__WriteObjectOutResultResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	WriteObjectOutResult_ SOAP
//gsoap ns1  service method-style:	WriteObjectOutResult_ document
//gsoap ns1  service method-encoding:	WriteObjectOutResult_ literal
//gsoap ns1  service method-input-action:	WriteObjectOutResult_ http://www.hg-banner.com.cn/WriteObjectOutResult
//gsoap ns1  service method-output-action:	WriteObjectOutResult_ http://www.hg-banner.com.cn/WriteObjectOutResultResponse
int __ns1__WriteObjectOutResult_(
    _ns1__WriteObjectOutResult*         ns1__WriteObjectOutResult,	///< Input parameter
    _ns1__WriteObjectOutResultResponse &ns1__WriteObjectOutResultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__uploadLog_                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__uploadLog_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hg-banner.com.cn/uploadLog"

  - Addressing input action: "http://www.hg-banner.com.cn/uploadLog"

  - Addressing output action: "http://www.hg-banner.com.cn/uploadLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__uploadLog_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__uploadLog*                    ns1__uploadLog,
    // output parameters:
    _ns1__uploadLogResponse            &ns1__uploadLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__uploadLog_(
    struct soap *soap,
    // input parameters:
    _ns1__uploadLog*                    ns1__uploadLog,
    // output parameters:
    _ns1__uploadLogResponse            &ns1__uploadLogResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	uploadLog_ SOAP
//gsoap ns1  service method-style:	uploadLog_ document
//gsoap ns1  service method-encoding:	uploadLog_ literal
//gsoap ns1  service method-input-action:	uploadLog_ http://www.hg-banner.com.cn/uploadLog
//gsoap ns1  service method-output-action:	uploadLog_ http://www.hg-banner.com.cn/uploadLogResponse
int __ns1__uploadLog_(
    _ns1__uploadLog*                    ns1__uploadLog,	///< Input parameter
    _ns1__uploadLogResponse            &ns1__uploadLogResponse	///< Output parameter
);

/**

@page TmriOutAccessSoap Binding "TmriOutAccessSoap"

@section TmriOutAccessSoap_policy_enablers Policy Enablers of Binding "TmriOutAccessSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://www.hg-banner.com.cn/"

  - <queryObjectOut> @ref _ns1__queryObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut*);
    @endcode

  - <queryObjectOutResponse> @ref _ns1__queryObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__queryObjectOutResponse(struct soap*, _ns1__queryObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__queryObjectOutResponse(struct soap*, _ns1__queryObjectOutResponse*);
    @endcode

  - <QueryObjectOutRequest> @ref _ns1__QueryObjectOutRequest
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__QueryObjectOutRequest(struct soap*, _ns1__QueryObjectOutRequest*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__QueryObjectOutRequest(struct soap*, _ns1__QueryObjectOutRequest*);
    @endcode

  - <QueryObjectOutRequestResponse> @ref _ns1__QueryObjectOutRequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__QueryObjectOutRequestResponse(struct soap*, _ns1__QueryObjectOutRequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__QueryObjectOutRequestResponse(struct soap*, _ns1__QueryObjectOutRequestResponse*);
    @endcode

  - <QueryObjectOutResult> @ref _ns1__QueryObjectOutResult
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__QueryObjectOutResult(struct soap*, _ns1__QueryObjectOutResult*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__QueryObjectOutResult(struct soap*, _ns1__QueryObjectOutResult*);
    @endcode

  - <QueryObjectOutResultResponse> @ref _ns1__QueryObjectOutResultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__QueryObjectOutResultResponse(struct soap*, _ns1__QueryObjectOutResultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__QueryObjectOutResultResponse(struct soap*, _ns1__QueryObjectOutResultResponse*);
    @endcode

  - <writeObjectOut> @ref _ns1__writeObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut*);
    @endcode

  - <writeObjectOutResponse> @ref _ns1__writeObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__writeObjectOutResponse(struct soap*, _ns1__writeObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__writeObjectOutResponse(struct soap*, _ns1__writeObjectOutResponse*);
    @endcode

  - <WriteObjectOutRequest> @ref _ns1__WriteObjectOutRequest
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__WriteObjectOutRequest(struct soap*, _ns1__WriteObjectOutRequest*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__WriteObjectOutRequest(struct soap*, _ns1__WriteObjectOutRequest*);
    @endcode

  - <WriteObjectOutRequestResponse> @ref _ns1__WriteObjectOutRequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__WriteObjectOutRequestResponse(struct soap*, _ns1__WriteObjectOutRequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__WriteObjectOutRequestResponse(struct soap*, _ns1__WriteObjectOutRequestResponse*);
    @endcode

  - <WriteObjectOutResult> @ref _ns1__WriteObjectOutResult
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__WriteObjectOutResult(struct soap*, _ns1__WriteObjectOutResult*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__WriteObjectOutResult(struct soap*, _ns1__WriteObjectOutResult*);
    @endcode

  - <WriteObjectOutResultResponse> @ref _ns1__WriteObjectOutResultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__WriteObjectOutResultResponse(struct soap*, _ns1__WriteObjectOutResultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__WriteObjectOutResultResponse(struct soap*, _ns1__WriteObjectOutResultResponse*);
    @endcode

  - <uploadLog> @ref _ns1__uploadLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadLog(struct soap*, _ns1__uploadLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadLog(struct soap*, _ns1__uploadLog*);
    @endcode

  - <uploadLogResponse> @ref _ns1__uploadLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadLogResponse(struct soap*, _ns1__uploadLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadLogResponse(struct soap*, _ns1__uploadLogResponse*);
    @endcode

  - <string> (use wsdl2h option -g to auto-generate)

*/

/* End of TmriOutAccess.h */
