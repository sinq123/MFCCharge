/* soapH.h
   Generated by gSOAP 2.8.21 from TmriOutAccess.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__wstring(soap, data),0) || soap_put_std__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);

inline std::wstring * soap_new_std__wstring(struct soap *soap, int n = -1) { return soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL); }

inline std::wstring * soap_new_req_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline std::wstring * soap_new_set_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline void soap_delete_std__wstring(struct soap *soap, std::wstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__uploadLogResponse
#define SOAP_TYPE__ns1__uploadLogResponse (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__uploadLogResponse(struct soap*, const char*, int, const _ns1__uploadLogResponse *, const char*);
SOAP_FMAC3 _ns1__uploadLogResponse * SOAP_FMAC4 soap_in__ns1__uploadLogResponse(struct soap*, const char*, _ns1__uploadLogResponse *, const char*);

#ifndef soap_write__ns1__uploadLogResponse
#define soap_write__ns1__uploadLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:uploadLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__uploadLogResponse * SOAP_FMAC4 soap_get__ns1__uploadLogResponse(struct soap*, _ns1__uploadLogResponse *, const char*, const char*);

#ifndef soap_read__ns1__uploadLogResponse
#define soap_read__ns1__uploadLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__uploadLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__uploadLogResponse * SOAP_FMAC2 soap_instantiate__ns1__uploadLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__uploadLogResponse * soap_new__ns1__uploadLogResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__uploadLogResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__uploadLogResponse * soap_new_req__ns1__uploadLogResponse(struct soap *soap) { _ns1__uploadLogResponse *_p = soap_instantiate__ns1__uploadLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__uploadLogResponse * soap_new_set__ns1__uploadLogResponse(struct soap *soap, std::wstring *uploadLogResult) { _ns1__uploadLogResponse *_p = soap_instantiate__ns1__uploadLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__uploadLogResponse::uploadLogResult = uploadLogResult; } return _p; }

inline void soap_delete__ns1__uploadLogResponse(struct soap *soap, _ns1__uploadLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__uploadLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__uploadLog
#define SOAP_TYPE__ns1__uploadLog (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__uploadLog(struct soap*, const char*, int, const _ns1__uploadLog *, const char*);
SOAP_FMAC3 _ns1__uploadLog * SOAP_FMAC4 soap_in__ns1__uploadLog(struct soap*, const char*, _ns1__uploadLog *, const char*);

#ifndef soap_write__ns1__uploadLog
#define soap_write__ns1__uploadLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:uploadLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__uploadLog * SOAP_FMAC4 soap_get__ns1__uploadLog(struct soap*, _ns1__uploadLog *, const char*, const char*);

#ifndef soap_read__ns1__uploadLog
#define soap_read__ns1__uploadLog(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__uploadLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__uploadLog * SOAP_FMAC2 soap_instantiate__ns1__uploadLog(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__uploadLog * soap_new__ns1__uploadLog(struct soap *soap, int n = -1) { return soap_instantiate__ns1__uploadLog(soap, n, NULL, NULL, NULL); }

inline _ns1__uploadLog * soap_new_req__ns1__uploadLog(struct soap *soap) { _ns1__uploadLog *_p = soap_instantiate__ns1__uploadLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__uploadLog * soap_new_set__ns1__uploadLog(struct soap *soap, std::wstring *log) { _ns1__uploadLog *_p = soap_instantiate__ns1__uploadLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__uploadLog::log = log; } return _p; }

inline void soap_delete__ns1__uploadLog(struct soap *soap, _ns1__uploadLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__uploadLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__WriteObjectOutResultResponse
#define SOAP_TYPE__ns1__WriteObjectOutResultResponse (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WriteObjectOutResultResponse(struct soap*, const char*, int, const _ns1__WriteObjectOutResultResponse *, const char*);
SOAP_FMAC3 _ns1__WriteObjectOutResultResponse * SOAP_FMAC4 soap_in__ns1__WriteObjectOutResultResponse(struct soap*, const char*, _ns1__WriteObjectOutResultResponse *, const char*);

#ifndef soap_write__ns1__WriteObjectOutResultResponse
#define soap_write__ns1__WriteObjectOutResultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:WriteObjectOutResultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WriteObjectOutResultResponse * SOAP_FMAC4 soap_get__ns1__WriteObjectOutResultResponse(struct soap*, _ns1__WriteObjectOutResultResponse *, const char*, const char*);

#ifndef soap_read__ns1__WriteObjectOutResultResponse
#define soap_read__ns1__WriteObjectOutResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__WriteObjectOutResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__WriteObjectOutResultResponse * SOAP_FMAC2 soap_instantiate__ns1__WriteObjectOutResultResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WriteObjectOutResultResponse * soap_new__ns1__WriteObjectOutResultResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__WriteObjectOutResultResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__WriteObjectOutResultResponse * soap_new_req__ns1__WriteObjectOutResultResponse(struct soap *soap) { _ns1__WriteObjectOutResultResponse *_p = soap_instantiate__ns1__WriteObjectOutResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__WriteObjectOutResultResponse * soap_new_set__ns1__WriteObjectOutResultResponse(struct soap *soap, std::wstring *WriteObjectOutResultResult) { _ns1__WriteObjectOutResultResponse *_p = soap_instantiate__ns1__WriteObjectOutResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__WriteObjectOutResultResponse::WriteObjectOutResultResult = WriteObjectOutResultResult; } return _p; }

inline void soap_delete__ns1__WriteObjectOutResultResponse(struct soap *soap, _ns1__WriteObjectOutResultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WriteObjectOutResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__WriteObjectOutResult
#define SOAP_TYPE__ns1__WriteObjectOutResult (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WriteObjectOutResult(struct soap*, const char*, int, const _ns1__WriteObjectOutResult *, const char*);
SOAP_FMAC3 _ns1__WriteObjectOutResult * SOAP_FMAC4 soap_in__ns1__WriteObjectOutResult(struct soap*, const char*, _ns1__WriteObjectOutResult *, const char*);

#ifndef soap_write__ns1__WriteObjectOutResult
#define soap_write__ns1__WriteObjectOutResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:WriteObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WriteObjectOutResult * SOAP_FMAC4 soap_get__ns1__WriteObjectOutResult(struct soap*, _ns1__WriteObjectOutResult *, const char*, const char*);

#ifndef soap_read__ns1__WriteObjectOutResult
#define soap_read__ns1__WriteObjectOutResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__WriteObjectOutResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__WriteObjectOutResult * SOAP_FMAC2 soap_instantiate__ns1__WriteObjectOutResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WriteObjectOutResult * soap_new__ns1__WriteObjectOutResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__WriteObjectOutResult(soap, n, NULL, NULL, NULL); }

inline _ns1__WriteObjectOutResult * soap_new_req__ns1__WriteObjectOutResult(struct soap *soap) { _ns1__WriteObjectOutResult *_p = soap_instantiate__ns1__WriteObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__WriteObjectOutResult * soap_new_set__ns1__WriteObjectOutResult(struct soap *soap, std::wstring *xtlb, std::wstring *jkxlh, std::wstring *jkid, std::wstring *cjsqbh, std::wstring *dwjgdm, std::wstring *dwmc, std::wstring *yhbz, std::wstring *yhxm, std::wstring *zdbs, std::wstring *requestid, std::wstring *sendXmlDoc, std::wstring *resultXmlDoc) { _ns1__WriteObjectOutResult *_p = soap_instantiate__ns1__WriteObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__WriteObjectOutResult::xtlb = xtlb; _p->_ns1__WriteObjectOutResult::jkxlh = jkxlh; _p->_ns1__WriteObjectOutResult::jkid = jkid; _p->_ns1__WriteObjectOutResult::cjsqbh = cjsqbh; _p->_ns1__WriteObjectOutResult::dwjgdm = dwjgdm; _p->_ns1__WriteObjectOutResult::dwmc = dwmc; _p->_ns1__WriteObjectOutResult::yhbz = yhbz; _p->_ns1__WriteObjectOutResult::yhxm = yhxm; _p->_ns1__WriteObjectOutResult::zdbs = zdbs; _p->_ns1__WriteObjectOutResult::requestid = requestid; _p->_ns1__WriteObjectOutResult::sendXmlDoc = sendXmlDoc; _p->_ns1__WriteObjectOutResult::resultXmlDoc = resultXmlDoc; } return _p; }

inline void soap_delete__ns1__WriteObjectOutResult(struct soap *soap, _ns1__WriteObjectOutResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WriteObjectOutResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__WriteObjectOutRequestResponse
#define SOAP_TYPE__ns1__WriteObjectOutRequestResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WriteObjectOutRequestResponse(struct soap*, const char*, int, const _ns1__WriteObjectOutRequestResponse *, const char*);
SOAP_FMAC3 _ns1__WriteObjectOutRequestResponse * SOAP_FMAC4 soap_in__ns1__WriteObjectOutRequestResponse(struct soap*, const char*, _ns1__WriteObjectOutRequestResponse *, const char*);

#ifndef soap_write__ns1__WriteObjectOutRequestResponse
#define soap_write__ns1__WriteObjectOutRequestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:WriteObjectOutRequestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WriteObjectOutRequestResponse * SOAP_FMAC4 soap_get__ns1__WriteObjectOutRequestResponse(struct soap*, _ns1__WriteObjectOutRequestResponse *, const char*, const char*);

#ifndef soap_read__ns1__WriteObjectOutRequestResponse
#define soap_read__ns1__WriteObjectOutRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__WriteObjectOutRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__WriteObjectOutRequestResponse * SOAP_FMAC2 soap_instantiate__ns1__WriteObjectOutRequestResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WriteObjectOutRequestResponse * soap_new__ns1__WriteObjectOutRequestResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__WriteObjectOutRequestResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__WriteObjectOutRequestResponse * soap_new_req__ns1__WriteObjectOutRequestResponse(struct soap *soap) { _ns1__WriteObjectOutRequestResponse *_p = soap_instantiate__ns1__WriteObjectOutRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__WriteObjectOutRequestResponse * soap_new_set__ns1__WriteObjectOutRequestResponse(struct soap *soap, std::wstring *WriteObjectOutRequestResult) { _ns1__WriteObjectOutRequestResponse *_p = soap_instantiate__ns1__WriteObjectOutRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__WriteObjectOutRequestResponse::WriteObjectOutRequestResult = WriteObjectOutRequestResult; } return _p; }

inline void soap_delete__ns1__WriteObjectOutRequestResponse(struct soap *soap, _ns1__WriteObjectOutRequestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WriteObjectOutRequestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__WriteObjectOutRequest
#define SOAP_TYPE__ns1__WriteObjectOutRequest (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WriteObjectOutRequest(struct soap*, const char*, int, const _ns1__WriteObjectOutRequest *, const char*);
SOAP_FMAC3 _ns1__WriteObjectOutRequest * SOAP_FMAC4 soap_in__ns1__WriteObjectOutRequest(struct soap*, const char*, _ns1__WriteObjectOutRequest *, const char*);

#ifndef soap_write__ns1__WriteObjectOutRequest
#define soap_write__ns1__WriteObjectOutRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:WriteObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WriteObjectOutRequest * SOAP_FMAC4 soap_get__ns1__WriteObjectOutRequest(struct soap*, _ns1__WriteObjectOutRequest *, const char*, const char*);

#ifndef soap_read__ns1__WriteObjectOutRequest
#define soap_read__ns1__WriteObjectOutRequest(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__WriteObjectOutRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__WriteObjectOutRequest * SOAP_FMAC2 soap_instantiate__ns1__WriteObjectOutRequest(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WriteObjectOutRequest * soap_new__ns1__WriteObjectOutRequest(struct soap *soap, int n = -1) { return soap_instantiate__ns1__WriteObjectOutRequest(soap, n, NULL, NULL, NULL); }

inline _ns1__WriteObjectOutRequest * soap_new_req__ns1__WriteObjectOutRequest(struct soap *soap) { _ns1__WriteObjectOutRequest *_p = soap_instantiate__ns1__WriteObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__WriteObjectOutRequest * soap_new_set__ns1__WriteObjectOutRequest(struct soap *soap, std::wstring *xtlb, std::wstring *jkxlh, std::wstring *jkid, std::wstring *cjsqbh, std::wstring *dwjgdm, std::wstring *dwmc, std::wstring *yhbz, std::wstring *yhxm, std::wstring *zdbs, std::wstring *sendXmlDoc) { _ns1__WriteObjectOutRequest *_p = soap_instantiate__ns1__WriteObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__WriteObjectOutRequest::xtlb = xtlb; _p->_ns1__WriteObjectOutRequest::jkxlh = jkxlh; _p->_ns1__WriteObjectOutRequest::jkid = jkid; _p->_ns1__WriteObjectOutRequest::cjsqbh = cjsqbh; _p->_ns1__WriteObjectOutRequest::dwjgdm = dwjgdm; _p->_ns1__WriteObjectOutRequest::dwmc = dwmc; _p->_ns1__WriteObjectOutRequest::yhbz = yhbz; _p->_ns1__WriteObjectOutRequest::yhxm = yhxm; _p->_ns1__WriteObjectOutRequest::zdbs = zdbs; _p->_ns1__WriteObjectOutRequest::sendXmlDoc = sendXmlDoc; } return _p; }

inline void soap_delete__ns1__WriteObjectOutRequest(struct soap *soap, _ns1__WriteObjectOutRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WriteObjectOutRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__writeObjectOutResponse
#define SOAP_TYPE__ns1__writeObjectOutResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__writeObjectOutResponse(struct soap*, const char*, int, const _ns1__writeObjectOutResponse *, const char*);
SOAP_FMAC3 _ns1__writeObjectOutResponse * SOAP_FMAC4 soap_in__ns1__writeObjectOutResponse(struct soap*, const char*, _ns1__writeObjectOutResponse *, const char*);

#ifndef soap_write__ns1__writeObjectOutResponse
#define soap_write__ns1__writeObjectOutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:writeObjectOutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__writeObjectOutResponse * SOAP_FMAC4 soap_get__ns1__writeObjectOutResponse(struct soap*, _ns1__writeObjectOutResponse *, const char*, const char*);

#ifndef soap_read__ns1__writeObjectOutResponse
#define soap_read__ns1__writeObjectOutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__writeObjectOutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__writeObjectOutResponse * SOAP_FMAC2 soap_instantiate__ns1__writeObjectOutResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__writeObjectOutResponse * soap_new__ns1__writeObjectOutResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__writeObjectOutResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__writeObjectOutResponse * soap_new_req__ns1__writeObjectOutResponse(struct soap *soap) { _ns1__writeObjectOutResponse *_p = soap_instantiate__ns1__writeObjectOutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__writeObjectOutResponse * soap_new_set__ns1__writeObjectOutResponse(struct soap *soap, std::wstring *writeObjectOutResult) { _ns1__writeObjectOutResponse *_p = soap_instantiate__ns1__writeObjectOutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__writeObjectOutResponse::writeObjectOutResult = writeObjectOutResult; } return _p; }

inline void soap_delete__ns1__writeObjectOutResponse(struct soap *soap, _ns1__writeObjectOutResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__writeObjectOutResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__writeObjectOut
#define SOAP_TYPE__ns1__writeObjectOut (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__writeObjectOut(struct soap*, const char*, int, const _ns1__writeObjectOut *, const char*);
SOAP_FMAC3 _ns1__writeObjectOut * SOAP_FMAC4 soap_in__ns1__writeObjectOut(struct soap*, const char*, _ns1__writeObjectOut *, const char*);

#ifndef soap_write__ns1__writeObjectOut
#define soap_write__ns1__writeObjectOut(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:writeObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__writeObjectOut * SOAP_FMAC4 soap_get__ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut *, const char*, const char*);

#ifndef soap_read__ns1__writeObjectOut
#define soap_read__ns1__writeObjectOut(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__writeObjectOut(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__writeObjectOut * SOAP_FMAC2 soap_instantiate__ns1__writeObjectOut(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__writeObjectOut * soap_new__ns1__writeObjectOut(struct soap *soap, int n = -1) { return soap_instantiate__ns1__writeObjectOut(soap, n, NULL, NULL, NULL); }

inline _ns1__writeObjectOut * soap_new_req__ns1__writeObjectOut(struct soap *soap) { _ns1__writeObjectOut *_p = soap_instantiate__ns1__writeObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__writeObjectOut * soap_new_set__ns1__writeObjectOut(struct soap *soap, std::wstring *xtlb, std::wstring *jkid, std::wstring *WriteXmlDoc) { _ns1__writeObjectOut *_p = soap_instantiate__ns1__writeObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__writeObjectOut::xtlb = xtlb; _p->_ns1__writeObjectOut::jkid = jkid; _p->_ns1__writeObjectOut::WriteXmlDoc = WriteXmlDoc; } return _p; }

inline void soap_delete__ns1__writeObjectOut(struct soap *soap, _ns1__writeObjectOut *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__writeObjectOut(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjectOutResultResponse
#define SOAP_TYPE__ns1__QueryObjectOutResultResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjectOutResultResponse(struct soap*, const char*, int, const _ns1__QueryObjectOutResultResponse *, const char*);
SOAP_FMAC3 _ns1__QueryObjectOutResultResponse * SOAP_FMAC4 soap_in__ns1__QueryObjectOutResultResponse(struct soap*, const char*, _ns1__QueryObjectOutResultResponse *, const char*);

#ifndef soap_write__ns1__QueryObjectOutResultResponse
#define soap_write__ns1__QueryObjectOutResultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjectOutResultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectOutResultResponse * SOAP_FMAC4 soap_get__ns1__QueryObjectOutResultResponse(struct soap*, _ns1__QueryObjectOutResultResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjectOutResultResponse
#define soap_read__ns1__QueryObjectOutResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjectOutResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjectOutResultResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryObjectOutResultResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjectOutResultResponse * soap_new__ns1__QueryObjectOutResultResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjectOutResultResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjectOutResultResponse * soap_new_req__ns1__QueryObjectOutResultResponse(struct soap *soap) { _ns1__QueryObjectOutResultResponse *_p = soap_instantiate__ns1__QueryObjectOutResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryObjectOutResultResponse * soap_new_set__ns1__QueryObjectOutResultResponse(struct soap *soap, std::wstring *QueryObjectOutResultResult) { _ns1__QueryObjectOutResultResponse *_p = soap_instantiate__ns1__QueryObjectOutResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjectOutResultResponse::QueryObjectOutResultResult = QueryObjectOutResultResult; } return _p; }

inline void soap_delete__ns1__QueryObjectOutResultResponse(struct soap *soap, _ns1__QueryObjectOutResultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjectOutResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjectOutResult
#define SOAP_TYPE__ns1__QueryObjectOutResult (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjectOutResult(struct soap*, const char*, int, const _ns1__QueryObjectOutResult *, const char*);
SOAP_FMAC3 _ns1__QueryObjectOutResult * SOAP_FMAC4 soap_in__ns1__QueryObjectOutResult(struct soap*, const char*, _ns1__QueryObjectOutResult *, const char*);

#ifndef soap_write__ns1__QueryObjectOutResult
#define soap_write__ns1__QueryObjectOutResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectOutResult * SOAP_FMAC4 soap_get__ns1__QueryObjectOutResult(struct soap*, _ns1__QueryObjectOutResult *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjectOutResult
#define soap_read__ns1__QueryObjectOutResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjectOutResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjectOutResult * SOAP_FMAC2 soap_instantiate__ns1__QueryObjectOutResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjectOutResult * soap_new__ns1__QueryObjectOutResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjectOutResult(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjectOutResult * soap_new_req__ns1__QueryObjectOutResult(struct soap *soap) { _ns1__QueryObjectOutResult *_p = soap_instantiate__ns1__QueryObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryObjectOutResult * soap_new_set__ns1__QueryObjectOutResult(struct soap *soap, std::wstring *xtlb, std::wstring *jkxlh, std::wstring *jkid, std::wstring *cjsqbh, std::wstring *dwjgdm, std::wstring *dwmc, std::wstring *yhbz, std::wstring *yhxm, std::wstring *zdbs, std::wstring *requestid, std::wstring *sendXmlDoc, std::wstring *resultXmlDoc) { _ns1__QueryObjectOutResult *_p = soap_instantiate__ns1__QueryObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjectOutResult::xtlb = xtlb; _p->_ns1__QueryObjectOutResult::jkxlh = jkxlh; _p->_ns1__QueryObjectOutResult::jkid = jkid; _p->_ns1__QueryObjectOutResult::cjsqbh = cjsqbh; _p->_ns1__QueryObjectOutResult::dwjgdm = dwjgdm; _p->_ns1__QueryObjectOutResult::dwmc = dwmc; _p->_ns1__QueryObjectOutResult::yhbz = yhbz; _p->_ns1__QueryObjectOutResult::yhxm = yhxm; _p->_ns1__QueryObjectOutResult::zdbs = zdbs; _p->_ns1__QueryObjectOutResult::requestid = requestid; _p->_ns1__QueryObjectOutResult::sendXmlDoc = sendXmlDoc; _p->_ns1__QueryObjectOutResult::resultXmlDoc = resultXmlDoc; } return _p; }

inline void soap_delete__ns1__QueryObjectOutResult(struct soap *soap, _ns1__QueryObjectOutResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjectOutResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjectOutRequestResponse
#define SOAP_TYPE__ns1__QueryObjectOutRequestResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjectOutRequestResponse(struct soap*, const char*, int, const _ns1__QueryObjectOutRequestResponse *, const char*);
SOAP_FMAC3 _ns1__QueryObjectOutRequestResponse * SOAP_FMAC4 soap_in__ns1__QueryObjectOutRequestResponse(struct soap*, const char*, _ns1__QueryObjectOutRequestResponse *, const char*);

#ifndef soap_write__ns1__QueryObjectOutRequestResponse
#define soap_write__ns1__QueryObjectOutRequestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjectOutRequestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectOutRequestResponse * SOAP_FMAC4 soap_get__ns1__QueryObjectOutRequestResponse(struct soap*, _ns1__QueryObjectOutRequestResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjectOutRequestResponse
#define soap_read__ns1__QueryObjectOutRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjectOutRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjectOutRequestResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryObjectOutRequestResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjectOutRequestResponse * soap_new__ns1__QueryObjectOutRequestResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjectOutRequestResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjectOutRequestResponse * soap_new_req__ns1__QueryObjectOutRequestResponse(struct soap *soap) { _ns1__QueryObjectOutRequestResponse *_p = soap_instantiate__ns1__QueryObjectOutRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryObjectOutRequestResponse * soap_new_set__ns1__QueryObjectOutRequestResponse(struct soap *soap, std::wstring *QueryObjectOutRequestResult) { _ns1__QueryObjectOutRequestResponse *_p = soap_instantiate__ns1__QueryObjectOutRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjectOutRequestResponse::QueryObjectOutRequestResult = QueryObjectOutRequestResult; } return _p; }

inline void soap_delete__ns1__QueryObjectOutRequestResponse(struct soap *soap, _ns1__QueryObjectOutRequestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjectOutRequestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjectOutRequest
#define SOAP_TYPE__ns1__QueryObjectOutRequest (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjectOutRequest(struct soap*, const char*, int, const _ns1__QueryObjectOutRequest *, const char*);
SOAP_FMAC3 _ns1__QueryObjectOutRequest * SOAP_FMAC4 soap_in__ns1__QueryObjectOutRequest(struct soap*, const char*, _ns1__QueryObjectOutRequest *, const char*);

#ifndef soap_write__ns1__QueryObjectOutRequest
#define soap_write__ns1__QueryObjectOutRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectOutRequest * SOAP_FMAC4 soap_get__ns1__QueryObjectOutRequest(struct soap*, _ns1__QueryObjectOutRequest *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjectOutRequest
#define soap_read__ns1__QueryObjectOutRequest(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjectOutRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjectOutRequest * SOAP_FMAC2 soap_instantiate__ns1__QueryObjectOutRequest(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjectOutRequest * soap_new__ns1__QueryObjectOutRequest(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjectOutRequest(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjectOutRequest * soap_new_req__ns1__QueryObjectOutRequest(struct soap *soap) { _ns1__QueryObjectOutRequest *_p = soap_instantiate__ns1__QueryObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryObjectOutRequest * soap_new_set__ns1__QueryObjectOutRequest(struct soap *soap, std::wstring *xtlb, std::wstring *jkxlh, std::wstring *jkid, std::wstring *cjsqbh, std::wstring *dwjgdm, std::wstring *dwmc, std::wstring *yhbz, std::wstring *yhxm, std::wstring *zdbs, std::wstring *sendXmlDoc) { _ns1__QueryObjectOutRequest *_p = soap_instantiate__ns1__QueryObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjectOutRequest::xtlb = xtlb; _p->_ns1__QueryObjectOutRequest::jkxlh = jkxlh; _p->_ns1__QueryObjectOutRequest::jkid = jkid; _p->_ns1__QueryObjectOutRequest::cjsqbh = cjsqbh; _p->_ns1__QueryObjectOutRequest::dwjgdm = dwjgdm; _p->_ns1__QueryObjectOutRequest::dwmc = dwmc; _p->_ns1__QueryObjectOutRequest::yhbz = yhbz; _p->_ns1__QueryObjectOutRequest::yhxm = yhxm; _p->_ns1__QueryObjectOutRequest::zdbs = zdbs; _p->_ns1__QueryObjectOutRequest::sendXmlDoc = sendXmlDoc; } return _p; }

inline void soap_delete__ns1__QueryObjectOutRequest(struct soap *soap, _ns1__QueryObjectOutRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjectOutRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__queryObjectOutResponse
#define SOAP_TYPE__ns1__queryObjectOutResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__queryObjectOutResponse(struct soap*, const char*, int, const _ns1__queryObjectOutResponse *, const char*);
SOAP_FMAC3 _ns1__queryObjectOutResponse * SOAP_FMAC4 soap_in__ns1__queryObjectOutResponse(struct soap*, const char*, _ns1__queryObjectOutResponse *, const char*);

#ifndef soap_write__ns1__queryObjectOutResponse
#define soap_write__ns1__queryObjectOutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:queryObjectOutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__queryObjectOutResponse * SOAP_FMAC4 soap_get__ns1__queryObjectOutResponse(struct soap*, _ns1__queryObjectOutResponse *, const char*, const char*);

#ifndef soap_read__ns1__queryObjectOutResponse
#define soap_read__ns1__queryObjectOutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__queryObjectOutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__queryObjectOutResponse * SOAP_FMAC2 soap_instantiate__ns1__queryObjectOutResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__queryObjectOutResponse * soap_new__ns1__queryObjectOutResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__queryObjectOutResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__queryObjectOutResponse * soap_new_req__ns1__queryObjectOutResponse(struct soap *soap) { _ns1__queryObjectOutResponse *_p = soap_instantiate__ns1__queryObjectOutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__queryObjectOutResponse * soap_new_set__ns1__queryObjectOutResponse(struct soap *soap, std::wstring *queryObjectOutResult) { _ns1__queryObjectOutResponse *_p = soap_instantiate__ns1__queryObjectOutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__queryObjectOutResponse::queryObjectOutResult = queryObjectOutResult; } return _p; }

inline void soap_delete__ns1__queryObjectOutResponse(struct soap *soap, _ns1__queryObjectOutResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__queryObjectOutResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__queryObjectOut
#define SOAP_TYPE__ns1__queryObjectOut (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__queryObjectOut(struct soap*, const char*, int, const _ns1__queryObjectOut *, const char*);
SOAP_FMAC3 _ns1__queryObjectOut * SOAP_FMAC4 soap_in__ns1__queryObjectOut(struct soap*, const char*, _ns1__queryObjectOut *, const char*);

#ifndef soap_write__ns1__queryObjectOut
#define soap_write__ns1__queryObjectOut(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:queryObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__queryObjectOut * SOAP_FMAC4 soap_get__ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut *, const char*, const char*);

#ifndef soap_read__ns1__queryObjectOut
#define soap_read__ns1__queryObjectOut(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__queryObjectOut(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__queryObjectOut * SOAP_FMAC2 soap_instantiate__ns1__queryObjectOut(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__queryObjectOut * soap_new__ns1__queryObjectOut(struct soap *soap, int n = -1) { return soap_instantiate__ns1__queryObjectOut(soap, n, NULL, NULL, NULL); }

inline _ns1__queryObjectOut * soap_new_req__ns1__queryObjectOut(struct soap *soap) { _ns1__queryObjectOut *_p = soap_instantiate__ns1__queryObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__queryObjectOut * soap_new_set__ns1__queryObjectOut(struct soap *soap, std::wstring *xtlb, std::wstring *jkid, std::wstring *QueryXmlDoc) { _ns1__queryObjectOut *_p = soap_instantiate__ns1__queryObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__queryObjectOut::xtlb = xtlb; _p->_ns1__queryObjectOut::jkid = jkid; _p->_ns1__queryObjectOut::QueryXmlDoc = QueryXmlDoc; } return _p; }

inline void soap_delete__ns1__queryObjectOut(struct soap *soap, _ns1__queryObjectOut *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__queryObjectOut(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__uploadLog_
#define SOAP_TYPE___ns1__uploadLog_ (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__uploadLog_(struct soap*, struct __ns1__uploadLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__uploadLog_(struct soap*, const struct __ns1__uploadLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__uploadLog_(struct soap*, const char*, int, const struct __ns1__uploadLog_ *, const char*);
SOAP_FMAC3 struct __ns1__uploadLog_ * SOAP_FMAC4 soap_in___ns1__uploadLog_(struct soap*, const char*, struct __ns1__uploadLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__uploadLog_(struct soap*, const struct __ns1__uploadLog_ *, const char*, const char*);

#ifndef soap_write___ns1__uploadLog_
#define soap_write___ns1__uploadLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__uploadLog_(soap, data),0) || soap_put___ns1__uploadLog_(soap, data, "-ns1:uploadLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__uploadLog_ * SOAP_FMAC4 soap_get___ns1__uploadLog_(struct soap*, struct __ns1__uploadLog_ *, const char*, const char*);

#ifndef soap_read___ns1__uploadLog_
#define soap_read___ns1__uploadLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__uploadLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__uploadLog_ * SOAP_FMAC2 soap_instantiate___ns1__uploadLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__uploadLog_ * soap_new___ns1__uploadLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__uploadLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__uploadLog_ * soap_new_req___ns1__uploadLog_(struct soap *soap) { struct __ns1__uploadLog_ *_p = soap_instantiate___ns1__uploadLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__uploadLog_(soap, _p); } return _p; }

inline struct __ns1__uploadLog_ * soap_new_set___ns1__uploadLog_(struct soap *soap, _ns1__uploadLog *ns1__uploadLog) { struct __ns1__uploadLog_ *_p = soap_instantiate___ns1__uploadLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__uploadLog_(soap, _p); _p->ns1__uploadLog = ns1__uploadLog; } return _p; }

inline void soap_delete___ns1__uploadLog_(struct soap *soap, struct __ns1__uploadLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__uploadLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__WriteObjectOutResult_
#define SOAP_TYPE___ns1__WriteObjectOutResult_ (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WriteObjectOutResult_(struct soap*, struct __ns1__WriteObjectOutResult_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WriteObjectOutResult_(struct soap*, const struct __ns1__WriteObjectOutResult_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WriteObjectOutResult_(struct soap*, const char*, int, const struct __ns1__WriteObjectOutResult_ *, const char*);
SOAP_FMAC3 struct __ns1__WriteObjectOutResult_ * SOAP_FMAC4 soap_in___ns1__WriteObjectOutResult_(struct soap*, const char*, struct __ns1__WriteObjectOutResult_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WriteObjectOutResult_(struct soap*, const struct __ns1__WriteObjectOutResult_ *, const char*, const char*);

#ifndef soap_write___ns1__WriteObjectOutResult_
#define soap_write___ns1__WriteObjectOutResult_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__WriteObjectOutResult_(soap, data),0) || soap_put___ns1__WriteObjectOutResult_(soap, data, "-ns1:WriteObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__WriteObjectOutResult_ * SOAP_FMAC4 soap_get___ns1__WriteObjectOutResult_(struct soap*, struct __ns1__WriteObjectOutResult_ *, const char*, const char*);

#ifndef soap_read___ns1__WriteObjectOutResult_
#define soap_read___ns1__WriteObjectOutResult_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__WriteObjectOutResult_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__WriteObjectOutResult_ * SOAP_FMAC2 soap_instantiate___ns1__WriteObjectOutResult_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WriteObjectOutResult_ * soap_new___ns1__WriteObjectOutResult_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__WriteObjectOutResult_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__WriteObjectOutResult_ * soap_new_req___ns1__WriteObjectOutResult_(struct soap *soap) { struct __ns1__WriteObjectOutResult_ *_p = soap_instantiate___ns1__WriteObjectOutResult_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutResult_(soap, _p); } return _p; }

inline struct __ns1__WriteObjectOutResult_ * soap_new_set___ns1__WriteObjectOutResult_(struct soap *soap, _ns1__WriteObjectOutResult *ns1__WriteObjectOutResult) { struct __ns1__WriteObjectOutResult_ *_p = soap_instantiate___ns1__WriteObjectOutResult_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutResult_(soap, _p); _p->ns1__WriteObjectOutResult = ns1__WriteObjectOutResult; } return _p; }

inline void soap_delete___ns1__WriteObjectOutResult_(struct soap *soap, struct __ns1__WriteObjectOutResult_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WriteObjectOutResult_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__WriteObjectOutRequest_
#define SOAP_TYPE___ns1__WriteObjectOutRequest_ (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WriteObjectOutRequest_(struct soap*, struct __ns1__WriteObjectOutRequest_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WriteObjectOutRequest_(struct soap*, const struct __ns1__WriteObjectOutRequest_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WriteObjectOutRequest_(struct soap*, const char*, int, const struct __ns1__WriteObjectOutRequest_ *, const char*);
SOAP_FMAC3 struct __ns1__WriteObjectOutRequest_ * SOAP_FMAC4 soap_in___ns1__WriteObjectOutRequest_(struct soap*, const char*, struct __ns1__WriteObjectOutRequest_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WriteObjectOutRequest_(struct soap*, const struct __ns1__WriteObjectOutRequest_ *, const char*, const char*);

#ifndef soap_write___ns1__WriteObjectOutRequest_
#define soap_write___ns1__WriteObjectOutRequest_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__WriteObjectOutRequest_(soap, data),0) || soap_put___ns1__WriteObjectOutRequest_(soap, data, "-ns1:WriteObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__WriteObjectOutRequest_ * SOAP_FMAC4 soap_get___ns1__WriteObjectOutRequest_(struct soap*, struct __ns1__WriteObjectOutRequest_ *, const char*, const char*);

#ifndef soap_read___ns1__WriteObjectOutRequest_
#define soap_read___ns1__WriteObjectOutRequest_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__WriteObjectOutRequest_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__WriteObjectOutRequest_ * SOAP_FMAC2 soap_instantiate___ns1__WriteObjectOutRequest_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WriteObjectOutRequest_ * soap_new___ns1__WriteObjectOutRequest_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__WriteObjectOutRequest_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__WriteObjectOutRequest_ * soap_new_req___ns1__WriteObjectOutRequest_(struct soap *soap) { struct __ns1__WriteObjectOutRequest_ *_p = soap_instantiate___ns1__WriteObjectOutRequest_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutRequest_(soap, _p); } return _p; }

inline struct __ns1__WriteObjectOutRequest_ * soap_new_set___ns1__WriteObjectOutRequest_(struct soap *soap, _ns1__WriteObjectOutRequest *ns1__WriteObjectOutRequest) { struct __ns1__WriteObjectOutRequest_ *_p = soap_instantiate___ns1__WriteObjectOutRequest_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutRequest_(soap, _p); _p->ns1__WriteObjectOutRequest = ns1__WriteObjectOutRequest; } return _p; }

inline void soap_delete___ns1__WriteObjectOutRequest_(struct soap *soap, struct __ns1__WriteObjectOutRequest_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WriteObjectOutRequest_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__writeObjectOut_
#define SOAP_TYPE___ns1__writeObjectOut_ (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__writeObjectOut_(struct soap*, struct __ns1__writeObjectOut_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__writeObjectOut_(struct soap*, const struct __ns1__writeObjectOut_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__writeObjectOut_(struct soap*, const char*, int, const struct __ns1__writeObjectOut_ *, const char*);
SOAP_FMAC3 struct __ns1__writeObjectOut_ * SOAP_FMAC4 soap_in___ns1__writeObjectOut_(struct soap*, const char*, struct __ns1__writeObjectOut_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__writeObjectOut_(struct soap*, const struct __ns1__writeObjectOut_ *, const char*, const char*);

#ifndef soap_write___ns1__writeObjectOut_
#define soap_write___ns1__writeObjectOut_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__writeObjectOut_(soap, data),0) || soap_put___ns1__writeObjectOut_(soap, data, "-ns1:writeObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__writeObjectOut_ * SOAP_FMAC4 soap_get___ns1__writeObjectOut_(struct soap*, struct __ns1__writeObjectOut_ *, const char*, const char*);

#ifndef soap_read___ns1__writeObjectOut_
#define soap_read___ns1__writeObjectOut_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__writeObjectOut_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__writeObjectOut_ * SOAP_FMAC2 soap_instantiate___ns1__writeObjectOut_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__writeObjectOut_ * soap_new___ns1__writeObjectOut_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__writeObjectOut_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__writeObjectOut_ * soap_new_req___ns1__writeObjectOut_(struct soap *soap) { struct __ns1__writeObjectOut_ *_p = soap_instantiate___ns1__writeObjectOut_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__writeObjectOut_(soap, _p); } return _p; }

inline struct __ns1__writeObjectOut_ * soap_new_set___ns1__writeObjectOut_(struct soap *soap, _ns1__writeObjectOut *ns1__writeObjectOut) { struct __ns1__writeObjectOut_ *_p = soap_instantiate___ns1__writeObjectOut_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__writeObjectOut_(soap, _p); _p->ns1__writeObjectOut = ns1__writeObjectOut; } return _p; }

inline void soap_delete___ns1__writeObjectOut_(struct soap *soap, struct __ns1__writeObjectOut_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__writeObjectOut_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjectOutResult_
#define SOAP_TYPE___ns1__QueryObjectOutResult_ (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjectOutResult_(struct soap*, struct __ns1__QueryObjectOutResult_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjectOutResult_(struct soap*, const struct __ns1__QueryObjectOutResult_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjectOutResult_(struct soap*, const char*, int, const struct __ns1__QueryObjectOutResult_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjectOutResult_ * SOAP_FMAC4 soap_in___ns1__QueryObjectOutResult_(struct soap*, const char*, struct __ns1__QueryObjectOutResult_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjectOutResult_(struct soap*, const struct __ns1__QueryObjectOutResult_ *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjectOutResult_
#define soap_write___ns1__QueryObjectOutResult_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjectOutResult_(soap, data),0) || soap_put___ns1__QueryObjectOutResult_(soap, data, "-ns1:QueryObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjectOutResult_ * SOAP_FMAC4 soap_get___ns1__QueryObjectOutResult_(struct soap*, struct __ns1__QueryObjectOutResult_ *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjectOutResult_
#define soap_read___ns1__QueryObjectOutResult_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjectOutResult_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjectOutResult_ * SOAP_FMAC2 soap_instantiate___ns1__QueryObjectOutResult_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjectOutResult_ * soap_new___ns1__QueryObjectOutResult_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjectOutResult_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjectOutResult_ * soap_new_req___ns1__QueryObjectOutResult_(struct soap *soap) { struct __ns1__QueryObjectOutResult_ *_p = soap_instantiate___ns1__QueryObjectOutResult_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutResult_(soap, _p); } return _p; }

inline struct __ns1__QueryObjectOutResult_ * soap_new_set___ns1__QueryObjectOutResult_(struct soap *soap, _ns1__QueryObjectOutResult *ns1__QueryObjectOutResult) { struct __ns1__QueryObjectOutResult_ *_p = soap_instantiate___ns1__QueryObjectOutResult_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutResult_(soap, _p); _p->ns1__QueryObjectOutResult = ns1__QueryObjectOutResult; } return _p; }

inline void soap_delete___ns1__QueryObjectOutResult_(struct soap *soap, struct __ns1__QueryObjectOutResult_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjectOutResult_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjectOutRequest_
#define SOAP_TYPE___ns1__QueryObjectOutRequest_ (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjectOutRequest_(struct soap*, struct __ns1__QueryObjectOutRequest_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjectOutRequest_(struct soap*, const struct __ns1__QueryObjectOutRequest_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjectOutRequest_(struct soap*, const char*, int, const struct __ns1__QueryObjectOutRequest_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjectOutRequest_ * SOAP_FMAC4 soap_in___ns1__QueryObjectOutRequest_(struct soap*, const char*, struct __ns1__QueryObjectOutRequest_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjectOutRequest_(struct soap*, const struct __ns1__QueryObjectOutRequest_ *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjectOutRequest_
#define soap_write___ns1__QueryObjectOutRequest_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjectOutRequest_(soap, data),0) || soap_put___ns1__QueryObjectOutRequest_(soap, data, "-ns1:QueryObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjectOutRequest_ * SOAP_FMAC4 soap_get___ns1__QueryObjectOutRequest_(struct soap*, struct __ns1__QueryObjectOutRequest_ *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjectOutRequest_
#define soap_read___ns1__QueryObjectOutRequest_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjectOutRequest_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjectOutRequest_ * SOAP_FMAC2 soap_instantiate___ns1__QueryObjectOutRequest_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjectOutRequest_ * soap_new___ns1__QueryObjectOutRequest_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjectOutRequest_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjectOutRequest_ * soap_new_req___ns1__QueryObjectOutRequest_(struct soap *soap) { struct __ns1__QueryObjectOutRequest_ *_p = soap_instantiate___ns1__QueryObjectOutRequest_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutRequest_(soap, _p); } return _p; }

inline struct __ns1__QueryObjectOutRequest_ * soap_new_set___ns1__QueryObjectOutRequest_(struct soap *soap, _ns1__QueryObjectOutRequest *ns1__QueryObjectOutRequest) { struct __ns1__QueryObjectOutRequest_ *_p = soap_instantiate___ns1__QueryObjectOutRequest_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutRequest_(soap, _p); _p->ns1__QueryObjectOutRequest = ns1__QueryObjectOutRequest; } return _p; }

inline void soap_delete___ns1__QueryObjectOutRequest_(struct soap *soap, struct __ns1__QueryObjectOutRequest_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjectOutRequest_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__queryObjectOut_
#define SOAP_TYPE___ns1__queryObjectOut_ (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__queryObjectOut_(struct soap*, struct __ns1__queryObjectOut_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__queryObjectOut_(struct soap*, const struct __ns1__queryObjectOut_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__queryObjectOut_(struct soap*, const char*, int, const struct __ns1__queryObjectOut_ *, const char*);
SOAP_FMAC3 struct __ns1__queryObjectOut_ * SOAP_FMAC4 soap_in___ns1__queryObjectOut_(struct soap*, const char*, struct __ns1__queryObjectOut_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__queryObjectOut_(struct soap*, const struct __ns1__queryObjectOut_ *, const char*, const char*);

#ifndef soap_write___ns1__queryObjectOut_
#define soap_write___ns1__queryObjectOut_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__queryObjectOut_(soap, data),0) || soap_put___ns1__queryObjectOut_(soap, data, "-ns1:queryObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__queryObjectOut_ * SOAP_FMAC4 soap_get___ns1__queryObjectOut_(struct soap*, struct __ns1__queryObjectOut_ *, const char*, const char*);

#ifndef soap_read___ns1__queryObjectOut_
#define soap_read___ns1__queryObjectOut_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__queryObjectOut_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__queryObjectOut_ * SOAP_FMAC2 soap_instantiate___ns1__queryObjectOut_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__queryObjectOut_ * soap_new___ns1__queryObjectOut_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__queryObjectOut_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__queryObjectOut_ * soap_new_req___ns1__queryObjectOut_(struct soap *soap) { struct __ns1__queryObjectOut_ *_p = soap_instantiate___ns1__queryObjectOut_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__queryObjectOut_(soap, _p); } return _p; }

inline struct __ns1__queryObjectOut_ * soap_new_set___ns1__queryObjectOut_(struct soap *soap, _ns1__queryObjectOut *ns1__queryObjectOut) { struct __ns1__queryObjectOut_ *_p = soap_instantiate___ns1__queryObjectOut_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__queryObjectOut_(soap, _p); _p->ns1__queryObjectOut = ns1__queryObjectOut; } return _p; }

inline void soap_delete___ns1__queryObjectOut_(struct soap *soap, struct __ns1__queryObjectOut_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__queryObjectOut_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__uploadLog
#define SOAP_TYPE___ns1__uploadLog (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__uploadLog(struct soap*, struct __ns1__uploadLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__uploadLog(struct soap*, const struct __ns1__uploadLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__uploadLog(struct soap*, const char*, int, const struct __ns1__uploadLog *, const char*);
SOAP_FMAC3 struct __ns1__uploadLog * SOAP_FMAC4 soap_in___ns1__uploadLog(struct soap*, const char*, struct __ns1__uploadLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__uploadLog(struct soap*, const struct __ns1__uploadLog *, const char*, const char*);

#ifndef soap_write___ns1__uploadLog
#define soap_write___ns1__uploadLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__uploadLog(soap, data),0) || soap_put___ns1__uploadLog(soap, data, "-ns1:uploadLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__uploadLog * SOAP_FMAC4 soap_get___ns1__uploadLog(struct soap*, struct __ns1__uploadLog *, const char*, const char*);

#ifndef soap_read___ns1__uploadLog
#define soap_read___ns1__uploadLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__uploadLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__uploadLog * SOAP_FMAC2 soap_instantiate___ns1__uploadLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__uploadLog * soap_new___ns1__uploadLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__uploadLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__uploadLog * soap_new_req___ns1__uploadLog(struct soap *soap) { struct __ns1__uploadLog *_p = soap_instantiate___ns1__uploadLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__uploadLog(soap, _p); } return _p; }

inline struct __ns1__uploadLog * soap_new_set___ns1__uploadLog(struct soap *soap, _ns1__uploadLog *ns1__uploadLog) { struct __ns1__uploadLog *_p = soap_instantiate___ns1__uploadLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__uploadLog(soap, _p); _p->ns1__uploadLog = ns1__uploadLog; } return _p; }

inline void soap_delete___ns1__uploadLog(struct soap *soap, struct __ns1__uploadLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__uploadLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__WriteObjectOutResult
#define SOAP_TYPE___ns1__WriteObjectOutResult (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WriteObjectOutResult(struct soap*, struct __ns1__WriteObjectOutResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WriteObjectOutResult(struct soap*, const struct __ns1__WriteObjectOutResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WriteObjectOutResult(struct soap*, const char*, int, const struct __ns1__WriteObjectOutResult *, const char*);
SOAP_FMAC3 struct __ns1__WriteObjectOutResult * SOAP_FMAC4 soap_in___ns1__WriteObjectOutResult(struct soap*, const char*, struct __ns1__WriteObjectOutResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WriteObjectOutResult(struct soap*, const struct __ns1__WriteObjectOutResult *, const char*, const char*);

#ifndef soap_write___ns1__WriteObjectOutResult
#define soap_write___ns1__WriteObjectOutResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__WriteObjectOutResult(soap, data),0) || soap_put___ns1__WriteObjectOutResult(soap, data, "-ns1:WriteObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__WriteObjectOutResult * SOAP_FMAC4 soap_get___ns1__WriteObjectOutResult(struct soap*, struct __ns1__WriteObjectOutResult *, const char*, const char*);

#ifndef soap_read___ns1__WriteObjectOutResult
#define soap_read___ns1__WriteObjectOutResult(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__WriteObjectOutResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__WriteObjectOutResult * SOAP_FMAC2 soap_instantiate___ns1__WriteObjectOutResult(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WriteObjectOutResult * soap_new___ns1__WriteObjectOutResult(struct soap *soap, int n = -1) { return soap_instantiate___ns1__WriteObjectOutResult(soap, n, NULL, NULL, NULL); }

inline struct __ns1__WriteObjectOutResult * soap_new_req___ns1__WriteObjectOutResult(struct soap *soap) { struct __ns1__WriteObjectOutResult *_p = soap_instantiate___ns1__WriteObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutResult(soap, _p); } return _p; }

inline struct __ns1__WriteObjectOutResult * soap_new_set___ns1__WriteObjectOutResult(struct soap *soap, _ns1__WriteObjectOutResult *ns1__WriteObjectOutResult) { struct __ns1__WriteObjectOutResult *_p = soap_instantiate___ns1__WriteObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutResult(soap, _p); _p->ns1__WriteObjectOutResult = ns1__WriteObjectOutResult; } return _p; }

inline void soap_delete___ns1__WriteObjectOutResult(struct soap *soap, struct __ns1__WriteObjectOutResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WriteObjectOutResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__WriteObjectOutRequest
#define SOAP_TYPE___ns1__WriteObjectOutRequest (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WriteObjectOutRequest(struct soap*, struct __ns1__WriteObjectOutRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WriteObjectOutRequest(struct soap*, const struct __ns1__WriteObjectOutRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WriteObjectOutRequest(struct soap*, const char*, int, const struct __ns1__WriteObjectOutRequest *, const char*);
SOAP_FMAC3 struct __ns1__WriteObjectOutRequest * SOAP_FMAC4 soap_in___ns1__WriteObjectOutRequest(struct soap*, const char*, struct __ns1__WriteObjectOutRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WriteObjectOutRequest(struct soap*, const struct __ns1__WriteObjectOutRequest *, const char*, const char*);

#ifndef soap_write___ns1__WriteObjectOutRequest
#define soap_write___ns1__WriteObjectOutRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__WriteObjectOutRequest(soap, data),0) || soap_put___ns1__WriteObjectOutRequest(soap, data, "-ns1:WriteObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__WriteObjectOutRequest * SOAP_FMAC4 soap_get___ns1__WriteObjectOutRequest(struct soap*, struct __ns1__WriteObjectOutRequest *, const char*, const char*);

#ifndef soap_read___ns1__WriteObjectOutRequest
#define soap_read___ns1__WriteObjectOutRequest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__WriteObjectOutRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__WriteObjectOutRequest * SOAP_FMAC2 soap_instantiate___ns1__WriteObjectOutRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WriteObjectOutRequest * soap_new___ns1__WriteObjectOutRequest(struct soap *soap, int n = -1) { return soap_instantiate___ns1__WriteObjectOutRequest(soap, n, NULL, NULL, NULL); }

inline struct __ns1__WriteObjectOutRequest * soap_new_req___ns1__WriteObjectOutRequest(struct soap *soap) { struct __ns1__WriteObjectOutRequest *_p = soap_instantiate___ns1__WriteObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutRequest(soap, _p); } return _p; }

inline struct __ns1__WriteObjectOutRequest * soap_new_set___ns1__WriteObjectOutRequest(struct soap *soap, _ns1__WriteObjectOutRequest *ns1__WriteObjectOutRequest) { struct __ns1__WriteObjectOutRequest *_p = soap_instantiate___ns1__WriteObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__WriteObjectOutRequest(soap, _p); _p->ns1__WriteObjectOutRequest = ns1__WriteObjectOutRequest; } return _p; }

inline void soap_delete___ns1__WriteObjectOutRequest(struct soap *soap, struct __ns1__WriteObjectOutRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WriteObjectOutRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__writeObjectOut
#define SOAP_TYPE___ns1__writeObjectOut (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__writeObjectOut(struct soap*, struct __ns1__writeObjectOut *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__writeObjectOut(struct soap*, const struct __ns1__writeObjectOut *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__writeObjectOut(struct soap*, const char*, int, const struct __ns1__writeObjectOut *, const char*);
SOAP_FMAC3 struct __ns1__writeObjectOut * SOAP_FMAC4 soap_in___ns1__writeObjectOut(struct soap*, const char*, struct __ns1__writeObjectOut *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__writeObjectOut(struct soap*, const struct __ns1__writeObjectOut *, const char*, const char*);

#ifndef soap_write___ns1__writeObjectOut
#define soap_write___ns1__writeObjectOut(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__writeObjectOut(soap, data),0) || soap_put___ns1__writeObjectOut(soap, data, "-ns1:writeObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__writeObjectOut * SOAP_FMAC4 soap_get___ns1__writeObjectOut(struct soap*, struct __ns1__writeObjectOut *, const char*, const char*);

#ifndef soap_read___ns1__writeObjectOut
#define soap_read___ns1__writeObjectOut(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__writeObjectOut(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__writeObjectOut * SOAP_FMAC2 soap_instantiate___ns1__writeObjectOut(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__writeObjectOut * soap_new___ns1__writeObjectOut(struct soap *soap, int n = -1) { return soap_instantiate___ns1__writeObjectOut(soap, n, NULL, NULL, NULL); }

inline struct __ns1__writeObjectOut * soap_new_req___ns1__writeObjectOut(struct soap *soap) { struct __ns1__writeObjectOut *_p = soap_instantiate___ns1__writeObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__writeObjectOut(soap, _p); } return _p; }

inline struct __ns1__writeObjectOut * soap_new_set___ns1__writeObjectOut(struct soap *soap, _ns1__writeObjectOut *ns1__writeObjectOut) { struct __ns1__writeObjectOut *_p = soap_instantiate___ns1__writeObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__writeObjectOut(soap, _p); _p->ns1__writeObjectOut = ns1__writeObjectOut; } return _p; }

inline void soap_delete___ns1__writeObjectOut(struct soap *soap, struct __ns1__writeObjectOut *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__writeObjectOut(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjectOutResult
#define SOAP_TYPE___ns1__QueryObjectOutResult (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjectOutResult(struct soap*, struct __ns1__QueryObjectOutResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjectOutResult(struct soap*, const struct __ns1__QueryObjectOutResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjectOutResult(struct soap*, const char*, int, const struct __ns1__QueryObjectOutResult *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjectOutResult * SOAP_FMAC4 soap_in___ns1__QueryObjectOutResult(struct soap*, const char*, struct __ns1__QueryObjectOutResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjectOutResult(struct soap*, const struct __ns1__QueryObjectOutResult *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjectOutResult
#define soap_write___ns1__QueryObjectOutResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjectOutResult(soap, data),0) || soap_put___ns1__QueryObjectOutResult(soap, data, "-ns1:QueryObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjectOutResult * SOAP_FMAC4 soap_get___ns1__QueryObjectOutResult(struct soap*, struct __ns1__QueryObjectOutResult *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjectOutResult
#define soap_read___ns1__QueryObjectOutResult(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjectOutResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjectOutResult * SOAP_FMAC2 soap_instantiate___ns1__QueryObjectOutResult(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjectOutResult * soap_new___ns1__QueryObjectOutResult(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjectOutResult(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjectOutResult * soap_new_req___ns1__QueryObjectOutResult(struct soap *soap) { struct __ns1__QueryObjectOutResult *_p = soap_instantiate___ns1__QueryObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutResult(soap, _p); } return _p; }

inline struct __ns1__QueryObjectOutResult * soap_new_set___ns1__QueryObjectOutResult(struct soap *soap, _ns1__QueryObjectOutResult *ns1__QueryObjectOutResult) { struct __ns1__QueryObjectOutResult *_p = soap_instantiate___ns1__QueryObjectOutResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutResult(soap, _p); _p->ns1__QueryObjectOutResult = ns1__QueryObjectOutResult; } return _p; }

inline void soap_delete___ns1__QueryObjectOutResult(struct soap *soap, struct __ns1__QueryObjectOutResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjectOutResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjectOutRequest
#define SOAP_TYPE___ns1__QueryObjectOutRequest (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjectOutRequest(struct soap*, struct __ns1__QueryObjectOutRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjectOutRequest(struct soap*, const struct __ns1__QueryObjectOutRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjectOutRequest(struct soap*, const char*, int, const struct __ns1__QueryObjectOutRequest *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjectOutRequest * SOAP_FMAC4 soap_in___ns1__QueryObjectOutRequest(struct soap*, const char*, struct __ns1__QueryObjectOutRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjectOutRequest(struct soap*, const struct __ns1__QueryObjectOutRequest *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjectOutRequest
#define soap_write___ns1__QueryObjectOutRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjectOutRequest(soap, data),0) || soap_put___ns1__QueryObjectOutRequest(soap, data, "-ns1:QueryObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjectOutRequest * SOAP_FMAC4 soap_get___ns1__QueryObjectOutRequest(struct soap*, struct __ns1__QueryObjectOutRequest *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjectOutRequest
#define soap_read___ns1__QueryObjectOutRequest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjectOutRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjectOutRequest * SOAP_FMAC2 soap_instantiate___ns1__QueryObjectOutRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjectOutRequest * soap_new___ns1__QueryObjectOutRequest(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjectOutRequest(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjectOutRequest * soap_new_req___ns1__QueryObjectOutRequest(struct soap *soap) { struct __ns1__QueryObjectOutRequest *_p = soap_instantiate___ns1__QueryObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutRequest(soap, _p); } return _p; }

inline struct __ns1__QueryObjectOutRequest * soap_new_set___ns1__QueryObjectOutRequest(struct soap *soap, _ns1__QueryObjectOutRequest *ns1__QueryObjectOutRequest) { struct __ns1__QueryObjectOutRequest *_p = soap_instantiate___ns1__QueryObjectOutRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjectOutRequest(soap, _p); _p->ns1__QueryObjectOutRequest = ns1__QueryObjectOutRequest; } return _p; }

inline void soap_delete___ns1__QueryObjectOutRequest(struct soap *soap, struct __ns1__QueryObjectOutRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjectOutRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__queryObjectOut
#define SOAP_TYPE___ns1__queryObjectOut (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__queryObjectOut(struct soap*, struct __ns1__queryObjectOut *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__queryObjectOut(struct soap*, const struct __ns1__queryObjectOut *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__queryObjectOut(struct soap*, const char*, int, const struct __ns1__queryObjectOut *, const char*);
SOAP_FMAC3 struct __ns1__queryObjectOut * SOAP_FMAC4 soap_in___ns1__queryObjectOut(struct soap*, const char*, struct __ns1__queryObjectOut *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__queryObjectOut(struct soap*, const struct __ns1__queryObjectOut *, const char*, const char*);

#ifndef soap_write___ns1__queryObjectOut
#define soap_write___ns1__queryObjectOut(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__queryObjectOut(soap, data),0) || soap_put___ns1__queryObjectOut(soap, data, "-ns1:queryObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__queryObjectOut * SOAP_FMAC4 soap_get___ns1__queryObjectOut(struct soap*, struct __ns1__queryObjectOut *, const char*, const char*);

#ifndef soap_read___ns1__queryObjectOut
#define soap_read___ns1__queryObjectOut(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__queryObjectOut(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__queryObjectOut * SOAP_FMAC2 soap_instantiate___ns1__queryObjectOut(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__queryObjectOut * soap_new___ns1__queryObjectOut(struct soap *soap, int n = -1) { return soap_instantiate___ns1__queryObjectOut(soap, n, NULL, NULL, NULL); }

inline struct __ns1__queryObjectOut * soap_new_req___ns1__queryObjectOut(struct soap *soap) { struct __ns1__queryObjectOut *_p = soap_instantiate___ns1__queryObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__queryObjectOut(soap, _p); } return _p; }

inline struct __ns1__queryObjectOut * soap_new_set___ns1__queryObjectOut(struct soap *soap, _ns1__queryObjectOut *ns1__queryObjectOut) { struct __ns1__queryObjectOut *_p = soap_instantiate___ns1__queryObjectOut(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__queryObjectOut(soap, _p); _p->ns1__queryObjectOut = ns1__queryObjectOut; } return _p; }

inline void soap_delete___ns1__queryObjectOut(struct soap *soap, struct __ns1__queryObjectOut *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__queryObjectOut(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__uploadLog
#define SOAP_TYPE_PointerTo_ns1__uploadLog (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__uploadLog(struct soap*, _ns1__uploadLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__uploadLog(struct soap*, const char *, int, _ns1__uploadLog *const*, const char *);
SOAP_FMAC3 _ns1__uploadLog ** SOAP_FMAC4 soap_in_PointerTo_ns1__uploadLog(struct soap*, const char*, _ns1__uploadLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__uploadLog(struct soap*, _ns1__uploadLog *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__uploadLog
#define soap_write_PointerTo_ns1__uploadLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__uploadLog(soap, data),0) || soap_put_PointerTo_ns1__uploadLog(soap, data, "ns1:uploadLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__uploadLog ** SOAP_FMAC4 soap_get_PointerTo_ns1__uploadLog(struct soap*, _ns1__uploadLog **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__uploadLog
#define soap_read_PointerTo_ns1__uploadLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__uploadLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__WriteObjectOutResult
#define SOAP_TYPE_PointerTo_ns1__WriteObjectOutResult (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WriteObjectOutResult(struct soap*, _ns1__WriteObjectOutResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WriteObjectOutResult(struct soap*, const char *, int, _ns1__WriteObjectOutResult *const*, const char *);
SOAP_FMAC3 _ns1__WriteObjectOutResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__WriteObjectOutResult(struct soap*, const char*, _ns1__WriteObjectOutResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WriteObjectOutResult(struct soap*, _ns1__WriteObjectOutResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__WriteObjectOutResult
#define soap_write_PointerTo_ns1__WriteObjectOutResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__WriteObjectOutResult(soap, data),0) || soap_put_PointerTo_ns1__WriteObjectOutResult(soap, data, "ns1:WriteObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WriteObjectOutResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__WriteObjectOutResult(struct soap*, _ns1__WriteObjectOutResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__WriteObjectOutResult
#define soap_read_PointerTo_ns1__WriteObjectOutResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__WriteObjectOutResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__WriteObjectOutRequest
#define SOAP_TYPE_PointerTo_ns1__WriteObjectOutRequest (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WriteObjectOutRequest(struct soap*, _ns1__WriteObjectOutRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WriteObjectOutRequest(struct soap*, const char *, int, _ns1__WriteObjectOutRequest *const*, const char *);
SOAP_FMAC3 _ns1__WriteObjectOutRequest ** SOAP_FMAC4 soap_in_PointerTo_ns1__WriteObjectOutRequest(struct soap*, const char*, _ns1__WriteObjectOutRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WriteObjectOutRequest(struct soap*, _ns1__WriteObjectOutRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__WriteObjectOutRequest
#define soap_write_PointerTo_ns1__WriteObjectOutRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__WriteObjectOutRequest(soap, data),0) || soap_put_PointerTo_ns1__WriteObjectOutRequest(soap, data, "ns1:WriteObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__WriteObjectOutRequest ** SOAP_FMAC4 soap_get_PointerTo_ns1__WriteObjectOutRequest(struct soap*, _ns1__WriteObjectOutRequest **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__WriteObjectOutRequest
#define soap_read_PointerTo_ns1__WriteObjectOutRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__WriteObjectOutRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__writeObjectOut
#define SOAP_TYPE_PointerTo_ns1__writeObjectOut (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__writeObjectOut(struct soap*, const char *, int, _ns1__writeObjectOut *const*, const char *);
SOAP_FMAC3 _ns1__writeObjectOut ** SOAP_FMAC4 soap_in_PointerTo_ns1__writeObjectOut(struct soap*, const char*, _ns1__writeObjectOut **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__writeObjectOut
#define soap_write_PointerTo_ns1__writeObjectOut(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__writeObjectOut(soap, data),0) || soap_put_PointerTo_ns1__writeObjectOut(soap, data, "ns1:writeObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__writeObjectOut ** SOAP_FMAC4 soap_get_PointerTo_ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__writeObjectOut
#define soap_read_PointerTo_ns1__writeObjectOut(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__writeObjectOut(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__QueryObjectOutResult
#define SOAP_TYPE_PointerTo_ns1__QueryObjectOutResult (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryObjectOutResult(struct soap*, _ns1__QueryObjectOutResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryObjectOutResult(struct soap*, const char *, int, _ns1__QueryObjectOutResult *const*, const char *);
SOAP_FMAC3 _ns1__QueryObjectOutResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryObjectOutResult(struct soap*, const char*, _ns1__QueryObjectOutResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryObjectOutResult(struct soap*, _ns1__QueryObjectOutResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryObjectOutResult
#define soap_write_PointerTo_ns1__QueryObjectOutResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__QueryObjectOutResult(soap, data),0) || soap_put_PointerTo_ns1__QueryObjectOutResult(soap, data, "ns1:QueryObjectOutResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectOutResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryObjectOutResult(struct soap*, _ns1__QueryObjectOutResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryObjectOutResult
#define soap_read_PointerTo_ns1__QueryObjectOutResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryObjectOutResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__QueryObjectOutRequest
#define SOAP_TYPE_PointerTo_ns1__QueryObjectOutRequest (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryObjectOutRequest(struct soap*, _ns1__QueryObjectOutRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryObjectOutRequest(struct soap*, const char *, int, _ns1__QueryObjectOutRequest *const*, const char *);
SOAP_FMAC3 _ns1__QueryObjectOutRequest ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryObjectOutRequest(struct soap*, const char*, _ns1__QueryObjectOutRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryObjectOutRequest(struct soap*, _ns1__QueryObjectOutRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryObjectOutRequest
#define soap_write_PointerTo_ns1__QueryObjectOutRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__QueryObjectOutRequest(soap, data),0) || soap_put_PointerTo_ns1__QueryObjectOutRequest(soap, data, "ns1:QueryObjectOutRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectOutRequest ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryObjectOutRequest(struct soap*, _ns1__QueryObjectOutRequest **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryObjectOutRequest
#define soap_read_PointerTo_ns1__QueryObjectOutRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryObjectOutRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__queryObjectOut
#define SOAP_TYPE_PointerTo_ns1__queryObjectOut (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__queryObjectOut(struct soap*, const char *, int, _ns1__queryObjectOut *const*, const char *);
SOAP_FMAC3 _ns1__queryObjectOut ** SOAP_FMAC4 soap_in_PointerTo_ns1__queryObjectOut(struct soap*, const char*, _ns1__queryObjectOut **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__queryObjectOut
#define soap_write_PointerTo_ns1__queryObjectOut(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__queryObjectOut(soap, data),0) || soap_put_PointerTo_ns1__queryObjectOut(soap, data, "ns1:queryObjectOut", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__queryObjectOut ** SOAP_FMAC4 soap_get_PointerTo_ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__queryObjectOut
#define soap_read_PointerTo_ns1__queryObjectOut(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__queryObjectOut(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__wstring(soap, data),0) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
