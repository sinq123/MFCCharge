/* soapStub.h
   Generated by gSOAP 2.8.21 from TmriOutAccess.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://www.hg-banner.com.cn/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20821
# error "GSOAP VERSION 20821 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns1__queryObjectOut
#define SOAP_TYPE__ns1__queryObjectOut (8)
/* ns1:queryObjectOut */
class SOAP_CMAC _ns1__queryObjectOut
{
public:
	std::wstring *xtlb;	/* optional element of type xsd:string */
	std::wstring *jkid;	/* optional element of type xsd:string */
	std::wstring *QueryXmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE__ns1__queryObjectOut */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__queryObjectOut() { _ns1__queryObjectOut::soap_default(NULL); }
	virtual ~_ns1__queryObjectOut() { }
};
#endif

#ifndef SOAP_TYPE__ns1__queryObjectOutResponse
#define SOAP_TYPE__ns1__queryObjectOutResponse (9)
/* ns1:queryObjectOutResponse */
class SOAP_CMAC _ns1__queryObjectOutResponse
{
public:
	std::wstring *queryObjectOutResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique type id SOAP_TYPE__ns1__queryObjectOutResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__queryObjectOutResponse() { _ns1__queryObjectOutResponse::soap_default(NULL); }
	virtual ~_ns1__queryObjectOutResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__QueryObjectOutRequest
#define SOAP_TYPE__ns1__QueryObjectOutRequest (10)
/* ns1:QueryObjectOutRequest */
class SOAP_CMAC _ns1__QueryObjectOutRequest
{
public:
	std::wstring *xtlb;	/* optional element of type xsd:string */
	std::wstring *jkxlh;	/* optional element of type xsd:string */
	std::wstring *jkid;	/* optional element of type xsd:string */
	std::wstring *cjsqbh;	/* optional element of type xsd:string */
	std::wstring *dwjgdm;	/* optional element of type xsd:string */
	std::wstring *dwmc;	/* optional element of type xsd:string */
	std::wstring *yhbz;	/* optional element of type xsd:string */
	std::wstring *yhxm;	/* optional element of type xsd:string */
	std::wstring *zdbs;	/* optional element of type xsd:string */
	std::wstring *sendXmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique type id SOAP_TYPE__ns1__QueryObjectOutRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__QueryObjectOutRequest() { _ns1__QueryObjectOutRequest::soap_default(NULL); }
	virtual ~_ns1__QueryObjectOutRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns1__QueryObjectOutRequestResponse
#define SOAP_TYPE__ns1__QueryObjectOutRequestResponse (11)
/* ns1:QueryObjectOutRequestResponse */
class SOAP_CMAC _ns1__QueryObjectOutRequestResponse
{
public:
	std::wstring *QueryObjectOutRequestResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique type id SOAP_TYPE__ns1__QueryObjectOutRequestResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__QueryObjectOutRequestResponse() { _ns1__QueryObjectOutRequestResponse::soap_default(NULL); }
	virtual ~_ns1__QueryObjectOutRequestResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__QueryObjectOutResult
#define SOAP_TYPE__ns1__QueryObjectOutResult (12)
/* ns1:QueryObjectOutResult */
class SOAP_CMAC _ns1__QueryObjectOutResult
{
public:
	std::wstring *xtlb;	/* optional element of type xsd:string */
	std::wstring *jkxlh;	/* optional element of type xsd:string */
	std::wstring *jkid;	/* optional element of type xsd:string */
	std::wstring *cjsqbh;	/* optional element of type xsd:string */
	std::wstring *dwjgdm;	/* optional element of type xsd:string */
	std::wstring *dwmc;	/* optional element of type xsd:string */
	std::wstring *yhbz;	/* optional element of type xsd:string */
	std::wstring *yhxm;	/* optional element of type xsd:string */
	std::wstring *zdbs;	/* optional element of type xsd:string */
	std::wstring *requestid;	/* optional element of type xsd:string */
	std::wstring *sendXmlDoc;	/* optional element of type xsd:string */
	std::wstring *resultXmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique type id SOAP_TYPE__ns1__QueryObjectOutResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__QueryObjectOutResult() { _ns1__QueryObjectOutResult::soap_default(NULL); }
	virtual ~_ns1__QueryObjectOutResult() { }
};
#endif

#ifndef SOAP_TYPE__ns1__QueryObjectOutResultResponse
#define SOAP_TYPE__ns1__QueryObjectOutResultResponse (13)
/* ns1:QueryObjectOutResultResponse */
class SOAP_CMAC _ns1__QueryObjectOutResultResponse
{
public:
	std::wstring *QueryObjectOutResultResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique type id SOAP_TYPE__ns1__QueryObjectOutResultResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__QueryObjectOutResultResponse() { _ns1__QueryObjectOutResultResponse::soap_default(NULL); }
	virtual ~_ns1__QueryObjectOutResultResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__writeObjectOut
#define SOAP_TYPE__ns1__writeObjectOut (14)
/* ns1:writeObjectOut */
class SOAP_CMAC _ns1__writeObjectOut
{
public:
	std::wstring *xtlb;	/* optional element of type xsd:string */
	std::wstring *jkid;	/* optional element of type xsd:string */
	std::wstring *WriteXmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique type id SOAP_TYPE__ns1__writeObjectOut */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__writeObjectOut() { _ns1__writeObjectOut::soap_default(NULL); }
	virtual ~_ns1__writeObjectOut() { }
};
#endif

#ifndef SOAP_TYPE__ns1__writeObjectOutResponse
#define SOAP_TYPE__ns1__writeObjectOutResponse (15)
/* ns1:writeObjectOutResponse */
class SOAP_CMAC _ns1__writeObjectOutResponse
{
public:
	std::wstring *writeObjectOutResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique type id SOAP_TYPE__ns1__writeObjectOutResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__writeObjectOutResponse() { _ns1__writeObjectOutResponse::soap_default(NULL); }
	virtual ~_ns1__writeObjectOutResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__WriteObjectOutRequest
#define SOAP_TYPE__ns1__WriteObjectOutRequest (16)
/* ns1:WriteObjectOutRequest */
class SOAP_CMAC _ns1__WriteObjectOutRequest
{
public:
	std::wstring *xtlb;	/* optional element of type xsd:string */
	std::wstring *jkxlh;	/* optional element of type xsd:string */
	std::wstring *jkid;	/* optional element of type xsd:string */
	std::wstring *cjsqbh;	/* optional element of type xsd:string */
	std::wstring *dwjgdm;	/* optional element of type xsd:string */
	std::wstring *dwmc;	/* optional element of type xsd:string */
	std::wstring *yhbz;	/* optional element of type xsd:string */
	std::wstring *yhxm;	/* optional element of type xsd:string */
	std::wstring *zdbs;	/* optional element of type xsd:string */
	std::wstring *sendXmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique type id SOAP_TYPE__ns1__WriteObjectOutRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__WriteObjectOutRequest() { _ns1__WriteObjectOutRequest::soap_default(NULL); }
	virtual ~_ns1__WriteObjectOutRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns1__WriteObjectOutRequestResponse
#define SOAP_TYPE__ns1__WriteObjectOutRequestResponse (17)
/* ns1:WriteObjectOutRequestResponse */
class SOAP_CMAC _ns1__WriteObjectOutRequestResponse
{
public:
	std::wstring *WriteObjectOutRequestResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique type id SOAP_TYPE__ns1__WriteObjectOutRequestResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__WriteObjectOutRequestResponse() { _ns1__WriteObjectOutRequestResponse::soap_default(NULL); }
	virtual ~_ns1__WriteObjectOutRequestResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__WriteObjectOutResult
#define SOAP_TYPE__ns1__WriteObjectOutResult (18)
/* ns1:WriteObjectOutResult */
class SOAP_CMAC _ns1__WriteObjectOutResult
{
public:
	std::wstring *xtlb;	/* optional element of type xsd:string */
	std::wstring *jkxlh;	/* optional element of type xsd:string */
	std::wstring *jkid;	/* optional element of type xsd:string */
	std::wstring *cjsqbh;	/* optional element of type xsd:string */
	std::wstring *dwjgdm;	/* optional element of type xsd:string */
	std::wstring *dwmc;	/* optional element of type xsd:string */
	std::wstring *yhbz;	/* optional element of type xsd:string */
	std::wstring *yhxm;	/* optional element of type xsd:string */
	std::wstring *zdbs;	/* optional element of type xsd:string */
	std::wstring *requestid;	/* optional element of type xsd:string */
	std::wstring *sendXmlDoc;	/* optional element of type xsd:string */
	std::wstring *resultXmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique type id SOAP_TYPE__ns1__WriteObjectOutResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__WriteObjectOutResult() { _ns1__WriteObjectOutResult::soap_default(NULL); }
	virtual ~_ns1__WriteObjectOutResult() { }
};
#endif

#ifndef SOAP_TYPE__ns1__WriteObjectOutResultResponse
#define SOAP_TYPE__ns1__WriteObjectOutResultResponse (19)
/* ns1:WriteObjectOutResultResponse */
class SOAP_CMAC _ns1__WriteObjectOutResultResponse
{
public:
	std::wstring *WriteObjectOutResultResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique type id SOAP_TYPE__ns1__WriteObjectOutResultResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__WriteObjectOutResultResponse() { _ns1__WriteObjectOutResultResponse::soap_default(NULL); }
	virtual ~_ns1__WriteObjectOutResultResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__uploadLog
#define SOAP_TYPE__ns1__uploadLog (20)
/* ns1:uploadLog */
class SOAP_CMAC _ns1__uploadLog
{
public:
	std::wstring *log;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique type id SOAP_TYPE__ns1__uploadLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__uploadLog() { _ns1__uploadLog::soap_default(NULL); }
	virtual ~_ns1__uploadLog() { }
};
#endif

#ifndef SOAP_TYPE__ns1__uploadLogResponse
#define SOAP_TYPE__ns1__uploadLogResponse (21)
/* ns1:uploadLogResponse */
class SOAP_CMAC _ns1__uploadLogResponse
{
public:
	std::wstring *uploadLogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE__ns1__uploadLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__uploadLogResponse() { _ns1__uploadLogResponse::soap_default(NULL); }
	virtual ~_ns1__uploadLogResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__queryObjectOut
#define SOAP_TYPE___ns1__queryObjectOut (28)
/* Operation wrapper: */
struct __ns1__queryObjectOut
{
public:
	_ns1__queryObjectOut *ns1__queryObjectOut;	/* optional element of type ns1:queryObjectOut */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE___ns1__queryObjectOut */
};
#endif

#ifndef SOAP_TYPE___ns1__QueryObjectOutRequest
#define SOAP_TYPE___ns1__QueryObjectOutRequest (32)
/* Operation wrapper: */
struct __ns1__QueryObjectOutRequest
{
public:
	_ns1__QueryObjectOutRequest *ns1__QueryObjectOutRequest;	/* optional element of type ns1:QueryObjectOutRequest */
public:
	int soap_type() const { return 32; } /* = unique type id SOAP_TYPE___ns1__QueryObjectOutRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__QueryObjectOutResult
#define SOAP_TYPE___ns1__QueryObjectOutResult (36)
/* Operation wrapper: */
struct __ns1__QueryObjectOutResult
{
public:
	_ns1__QueryObjectOutResult *ns1__QueryObjectOutResult;	/* optional element of type ns1:QueryObjectOutResult */
public:
	int soap_type() const { return 36; } /* = unique type id SOAP_TYPE___ns1__QueryObjectOutResult */
};
#endif

#ifndef SOAP_TYPE___ns1__writeObjectOut
#define SOAP_TYPE___ns1__writeObjectOut (40)
/* Operation wrapper: */
struct __ns1__writeObjectOut
{
public:
	_ns1__writeObjectOut *ns1__writeObjectOut;	/* optional element of type ns1:writeObjectOut */
public:
	int soap_type() const { return 40; } /* = unique type id SOAP_TYPE___ns1__writeObjectOut */
};
#endif

#ifndef SOAP_TYPE___ns1__WriteObjectOutRequest
#define SOAP_TYPE___ns1__WriteObjectOutRequest (44)
/* Operation wrapper: */
struct __ns1__WriteObjectOutRequest
{
public:
	_ns1__WriteObjectOutRequest *ns1__WriteObjectOutRequest;	/* optional element of type ns1:WriteObjectOutRequest */
public:
	int soap_type() const { return 44; } /* = unique type id SOAP_TYPE___ns1__WriteObjectOutRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__WriteObjectOutResult
#define SOAP_TYPE___ns1__WriteObjectOutResult (48)
/* Operation wrapper: */
struct __ns1__WriteObjectOutResult
{
public:
	_ns1__WriteObjectOutResult *ns1__WriteObjectOutResult;	/* optional element of type ns1:WriteObjectOutResult */
public:
	int soap_type() const { return 48; } /* = unique type id SOAP_TYPE___ns1__WriteObjectOutResult */
};
#endif

#ifndef SOAP_TYPE___ns1__uploadLog
#define SOAP_TYPE___ns1__uploadLog (52)
/* Operation wrapper: */
struct __ns1__uploadLog
{
public:
	_ns1__uploadLog *ns1__uploadLog;	/* optional element of type ns1:uploadLog */
public:
	int soap_type() const { return 52; } /* = unique type id SOAP_TYPE___ns1__uploadLog */
};
#endif

#ifndef SOAP_TYPE___ns1__queryObjectOut_
#define SOAP_TYPE___ns1__queryObjectOut_ (54)
/* Operation wrapper: */
struct __ns1__queryObjectOut_
{
public:
	_ns1__queryObjectOut *ns1__queryObjectOut;	/* optional element of type ns1:queryObjectOut */
public:
	int soap_type() const { return 54; } /* = unique type id SOAP_TYPE___ns1__queryObjectOut_ */
};
#endif

#ifndef SOAP_TYPE___ns1__QueryObjectOutRequest_
#define SOAP_TYPE___ns1__QueryObjectOutRequest_ (56)
/* Operation wrapper: */
struct __ns1__QueryObjectOutRequest_
{
public:
	_ns1__QueryObjectOutRequest *ns1__QueryObjectOutRequest;	/* optional element of type ns1:QueryObjectOutRequest */
public:
	int soap_type() const { return 56; } /* = unique type id SOAP_TYPE___ns1__QueryObjectOutRequest_ */
};
#endif

#ifndef SOAP_TYPE___ns1__QueryObjectOutResult_
#define SOAP_TYPE___ns1__QueryObjectOutResult_ (58)
/* Operation wrapper: */
struct __ns1__QueryObjectOutResult_
{
public:
	_ns1__QueryObjectOutResult *ns1__QueryObjectOutResult;	/* optional element of type ns1:QueryObjectOutResult */
public:
	int soap_type() const { return 58; } /* = unique type id SOAP_TYPE___ns1__QueryObjectOutResult_ */
};
#endif

#ifndef SOAP_TYPE___ns1__writeObjectOut_
#define SOAP_TYPE___ns1__writeObjectOut_ (60)
/* Operation wrapper: */
struct __ns1__writeObjectOut_
{
public:
	_ns1__writeObjectOut *ns1__writeObjectOut;	/* optional element of type ns1:writeObjectOut */
public:
	int soap_type() const { return 60; } /* = unique type id SOAP_TYPE___ns1__writeObjectOut_ */
};
#endif

#ifndef SOAP_TYPE___ns1__WriteObjectOutRequest_
#define SOAP_TYPE___ns1__WriteObjectOutRequest_ (62)
/* Operation wrapper: */
struct __ns1__WriteObjectOutRequest_
{
public:
	_ns1__WriteObjectOutRequest *ns1__WriteObjectOutRequest;	/* optional element of type ns1:WriteObjectOutRequest */
public:
	int soap_type() const { return 62; } /* = unique type id SOAP_TYPE___ns1__WriteObjectOutRequest_ */
};
#endif

#ifndef SOAP_TYPE___ns1__WriteObjectOutResult_
#define SOAP_TYPE___ns1__WriteObjectOutResult_ (64)
/* Operation wrapper: */
struct __ns1__WriteObjectOutResult_
{
public:
	_ns1__WriteObjectOutResult *ns1__WriteObjectOutResult;	/* optional element of type ns1:WriteObjectOutResult */
public:
	int soap_type() const { return 64; } /* = unique type id SOAP_TYPE___ns1__WriteObjectOutResult_ */
};
#endif

#ifndef SOAP_TYPE___ns1__uploadLog_
#define SOAP_TYPE___ns1__uploadLog_ (66)
/* Operation wrapper: */
struct __ns1__uploadLog_
{
public:
	_ns1__uploadLog *ns1__uploadLog;	/* optional element of type ns1:uploadLog */
public:
	int soap_type() const { return 66; } /* = unique type id SOAP_TYPE___ns1__uploadLog_ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (67)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 67; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (68)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 68; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (70)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 70; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (73)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 73; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (74)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 74; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
