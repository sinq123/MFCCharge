/* TmriOutAccess.h
   Generated by wsdl2h 2.8.21 from TmriOutAccess.wsdl and typemap.dat
   2021-01-09 12:53:07 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on TmriOutAccess.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.hyjtkj.com/                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.hyjtkj.com/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.hyjtkj.com/"
//gsoap ns1   schema namespace:	http://www.hyjtkj.com/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class _ns1__GetVer.
class _ns1__GetVer;

//  Forward declaration of class _ns1__GetVerResponse.
class _ns1__GetVerResponse;

//  Forward declaration of class _ns1__queryObjectOut.
class _ns1__queryObjectOut;

//  Forward declaration of class _ns1__queryObjectOutResponse.
class _ns1__queryObjectOutResponse;

//  Forward declaration of class _ns1__writeObjectOut.
class _ns1__writeObjectOut;

//  Forward declaration of class _ns1__writeObjectOutResponse.
class _ns1__writeObjectOutResponse;

//  Forward declaration of class _ns1__NetworkingQueryObjectOut.
class _ns1__NetworkingQueryObjectOut;

//  Forward declaration of class _ns1__NetworkingQueryObjectOutResponse.
class _ns1__NetworkingQueryObjectOutResponse;

//  Forward declaration of class _ns1__NetworkingWriteObjectOut.
class _ns1__NetworkingWriteObjectOut;

//  Forward declaration of class _ns1__NetworkingWriteObjectOutResponse.
class _ns1__NetworkingWriteObjectOutResponse;

//  Forward declaration of class _ns1__GetLoginParm.
class _ns1__GetLoginParm;

//  Forward declaration of class _ns1__GetLoginParmResponse.
class _ns1__GetLoginParmResponse;

//  Forward declaration of class _ns1__zjqueryObjectOut.
class _ns1__zjqueryObjectOut;

//  Forward declaration of class _ns1__zjqueryObjectOutResponse.
class _ns1__zjqueryObjectOutResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.hyjtkj.com/                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.hyjtkj.com/                                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.hyjtkj.com/":GetVer
/// @brief "http://www.hyjtkj.com/":GetVer is a complexType.
///
/// class _ns1__GetVer operations:
/// - soap_new__ns1__GetVer(soap*) allocate
/// - soap_new__ns1__GetVer(soap*, int num) allocate array
/// - soap_new_req__ns1__GetVer(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetVer(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetVer(soap*, _ns1__GetVer*) deserialize from a stream
/// - int soap_write__ns1__GetVer(soap, _ns1__GetVer*) serialize to a stream
class _ns1__GetVer
{ public:
/// Element "str" of XSD type xs:string.
    std::wstring*                        str                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":GetVerResponse
/// @brief "http://www.hyjtkj.com/":GetVerResponse is a complexType.
///
/// class _ns1__GetVerResponse operations:
/// - soap_new__ns1__GetVerResponse(soap*) allocate
/// - soap_new__ns1__GetVerResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetVerResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetVerResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetVerResponse(soap*, _ns1__GetVerResponse*) deserialize from a stream
/// - int soap_write__ns1__GetVerResponse(soap, _ns1__GetVerResponse*) serialize to a stream
class _ns1__GetVerResponse
{ public:
/// Element "GetVerResult" of XSD type xs:string.
    std::wstring*                        GetVerResult                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":queryObjectOut
/// @brief "http://www.hyjtkj.com/":queryObjectOut is a complexType.
///
/// class _ns1__queryObjectOut operations:
/// - soap_new__ns1__queryObjectOut(soap*) allocate
/// - soap_new__ns1__queryObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__queryObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__queryObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__queryObjectOut(soap*, _ns1__queryObjectOut*) deserialize from a stream
/// - int soap_write__ns1__queryObjectOut(soap, _ns1__queryObjectOut*) serialize to a stream
class _ns1__queryObjectOut
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "QueryUTF8XmlDoc" of XSD type xs:string.
    std::wstring*                        QueryUTF8XmlDoc                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":queryObjectOutResponse
/// @brief "http://www.hyjtkj.com/":queryObjectOutResponse is a complexType.
///
/// class _ns1__queryObjectOutResponse operations:
/// - soap_new__ns1__queryObjectOutResponse(soap*) allocate
/// - soap_new__ns1__queryObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__queryObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__queryObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__queryObjectOutResponse(soap*, _ns1__queryObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__queryObjectOutResponse(soap, _ns1__queryObjectOutResponse*) serialize to a stream
class _ns1__queryObjectOutResponse
{ public:
/// Element "queryObjectOutResult" of XSD type xs:string.
    std::wstring*                        queryObjectOutResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":writeObjectOut
/// @brief "http://www.hyjtkj.com/":writeObjectOut is a complexType.
///
/// class _ns1__writeObjectOut operations:
/// - soap_new__ns1__writeObjectOut(soap*) allocate
/// - soap_new__ns1__writeObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__writeObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__writeObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__writeObjectOut(soap*, _ns1__writeObjectOut*) deserialize from a stream
/// - int soap_write__ns1__writeObjectOut(soap, _ns1__writeObjectOut*) serialize to a stream
class _ns1__writeObjectOut
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "writeUTF8XmlDoc" of XSD type xs:string.
    std::wstring*                        writeUTF8XmlDoc                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":writeObjectOutResponse
/// @brief "http://www.hyjtkj.com/":writeObjectOutResponse is a complexType.
///
/// class _ns1__writeObjectOutResponse operations:
/// - soap_new__ns1__writeObjectOutResponse(soap*) allocate
/// - soap_new__ns1__writeObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__writeObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__writeObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__writeObjectOutResponse(soap*, _ns1__writeObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__writeObjectOutResponse(soap, _ns1__writeObjectOutResponse*) serialize to a stream
class _ns1__writeObjectOutResponse
{ public:
/// Element "writeObjectOutResult" of XSD type xs:string.
    std::wstring*                        writeObjectOutResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":NetworkingQueryObjectOut
/// @brief "http://www.hyjtkj.com/":NetworkingQueryObjectOut is a complexType.
///
/// class _ns1__NetworkingQueryObjectOut operations:
/// - soap_new__ns1__NetworkingQueryObjectOut(soap*) allocate
/// - soap_new__ns1__NetworkingQueryObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__NetworkingQueryObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__NetworkingQueryObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__NetworkingQueryObjectOut(soap*, _ns1__NetworkingQueryObjectOut*) deserialize from a stream
/// - int soap_write__ns1__NetworkingQueryObjectOut(soap, _ns1__NetworkingQueryObjectOut*) serialize to a stream
class _ns1__NetworkingQueryObjectOut
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "QueryUTF8XmlJsonDoc" of XSD type xs:string.
    std::wstring*                        QueryUTF8XmlJsonDoc            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":NetworkingQueryObjectOutResponse
/// @brief "http://www.hyjtkj.com/":NetworkingQueryObjectOutResponse is a complexType.
///
/// class _ns1__NetworkingQueryObjectOutResponse operations:
/// - soap_new__ns1__NetworkingQueryObjectOutResponse(soap*) allocate
/// - soap_new__ns1__NetworkingQueryObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__NetworkingQueryObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__NetworkingQueryObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__NetworkingQueryObjectOutResponse(soap*, _ns1__NetworkingQueryObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__NetworkingQueryObjectOutResponse(soap, _ns1__NetworkingQueryObjectOutResponse*) serialize to a stream
class _ns1__NetworkingQueryObjectOutResponse
{ public:
/// Element "NetworkingQueryObjectOutResult" of XSD type xs:string.
    std::wstring*                        NetworkingQueryObjectOutResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":NetworkingWriteObjectOut
/// @brief "http://www.hyjtkj.com/":NetworkingWriteObjectOut is a complexType.
///
/// class _ns1__NetworkingWriteObjectOut operations:
/// - soap_new__ns1__NetworkingWriteObjectOut(soap*) allocate
/// - soap_new__ns1__NetworkingWriteObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__NetworkingWriteObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__NetworkingWriteObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__NetworkingWriteObjectOut(soap*, _ns1__NetworkingWriteObjectOut*) deserialize from a stream
/// - int soap_write__ns1__NetworkingWriteObjectOut(soap, _ns1__NetworkingWriteObjectOut*) serialize to a stream
class _ns1__NetworkingWriteObjectOut
{ public:
/// Element "xtlb" of XSD type xs:string.
    std::wstring*                        xtlb                           0;	///< Optional element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "WriteUTF8XmlJsonDoc" of XSD type xs:string.
    std::wstring*                        WriteUTF8XmlJsonDoc            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":NetworkingWriteObjectOutResponse
/// @brief "http://www.hyjtkj.com/":NetworkingWriteObjectOutResponse is a complexType.
///
/// class _ns1__NetworkingWriteObjectOutResponse operations:
/// - soap_new__ns1__NetworkingWriteObjectOutResponse(soap*) allocate
/// - soap_new__ns1__NetworkingWriteObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__NetworkingWriteObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__NetworkingWriteObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__NetworkingWriteObjectOutResponse(soap*, _ns1__NetworkingWriteObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__NetworkingWriteObjectOutResponse(soap, _ns1__NetworkingWriteObjectOutResponse*) serialize to a stream
class _ns1__NetworkingWriteObjectOutResponse
{ public:
/// Element "NetworkingWriteObjectOutResult" of XSD type xs:string.
    std::wstring*                        NetworkingWriteObjectOutResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":GetLoginParm
/// @brief "http://www.hyjtkj.com/":GetLoginParm is a complexType.
///
/// class _ns1__GetLoginParm operations:
/// - soap_new__ns1__GetLoginParm(soap*) allocate
/// - soap_new__ns1__GetLoginParm(soap*, int num) allocate array
/// - soap_new_req__ns1__GetLoginParm(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetLoginParm(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetLoginParm(soap*, _ns1__GetLoginParm*) deserialize from a stream
/// - int soap_write__ns1__GetLoginParm(soap, _ns1__GetLoginParm*) serialize to a stream
class _ns1__GetLoginParm
{ public:
/// Element "_CYYID" of XSD type xs:string.
    std::wstring*                        _USCORECYYID                   0;	///< Optional element.
/// Element "mac" of XSD type xs:string.
    std::wstring*                        mac                            0;	///< Optional element.
/// Element "imie" of XSD type xs:string.
    std::wstring*                        imie                           0;	///< Optional element.
/// Element "ip" of XSD type xs:string.
    std::wstring*                        ip                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":GetLoginParmResponse
/// @brief "http://www.hyjtkj.com/":GetLoginParmResponse is a complexType.
///
/// class _ns1__GetLoginParmResponse operations:
/// - soap_new__ns1__GetLoginParmResponse(soap*) allocate
/// - soap_new__ns1__GetLoginParmResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetLoginParmResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetLoginParmResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetLoginParmResponse(soap*, _ns1__GetLoginParmResponse*) deserialize from a stream
/// - int soap_write__ns1__GetLoginParmResponse(soap, _ns1__GetLoginParmResponse*) serialize to a stream
class _ns1__GetLoginParmResponse
{ public:
/// Element "GetLoginParmResult" of XSD type xs:string.
    std::wstring*                        GetLoginParmResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":zjqueryObjectOut
/// @brief "http://www.hyjtkj.com/":zjqueryObjectOut is a complexType.
///
/// class _ns1__zjqueryObjectOut operations:
/// - soap_new__ns1__zjqueryObjectOut(soap*) allocate
/// - soap_new__ns1__zjqueryObjectOut(soap*, int num) allocate array
/// - soap_new_req__ns1__zjqueryObjectOut(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__zjqueryObjectOut(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__zjqueryObjectOut(soap*, _ns1__zjqueryObjectOut*) deserialize from a stream
/// - int soap_write__ns1__zjqueryObjectOut(soap, _ns1__zjqueryObjectOut*) serialize to a stream
class _ns1__zjqueryObjectOut
{ public:
/// Element "isSucceed" of XSD type xs:int.
    int                                  isSucceed                      1;	///< Required element.
/// Element "jkxlh" of XSD type xs:string.
    std::wstring*                        jkxlh                          0;	///< Optional element.
/// Element "jkid" of XSD type xs:string.
    std::wstring*                        jkid                           0;	///< Optional element.
/// Element "QueryUTF8XmlDoc" of XSD type xs:string.
    std::wstring*                        QueryUTF8XmlDoc                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.hyjtkj.com/":zjqueryObjectOutResponse
/// @brief "http://www.hyjtkj.com/":zjqueryObjectOutResponse is a complexType.
///
/// class _ns1__zjqueryObjectOutResponse operations:
/// - soap_new__ns1__zjqueryObjectOutResponse(soap*) allocate
/// - soap_new__ns1__zjqueryObjectOutResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__zjqueryObjectOutResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__zjqueryObjectOutResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__zjqueryObjectOutResponse(soap*, _ns1__zjqueryObjectOutResponse*) deserialize from a stream
/// - int soap_write__ns1__zjqueryObjectOutResponse(soap, _ns1__zjqueryObjectOutResponse*) serialize to a stream
class _ns1__zjqueryObjectOutResponse
{ public:
/// Element "zjqueryObjectOutResult" of XSD type xs:string.
    std::wstring*                        zjqueryObjectOutResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.hyjtkj.com/                                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.hyjtkj.com/":string of XSD type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.hyjtkj.com/                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	TmriOutAccessSoap 
//gsoap ns1  service type:	TmriOutAccessSoap 
//gsoap ns1  service port:	http://192.168.216.16:9022/pnweb/TmriOutAccess.asmx 
//gsoap ns1  service namespace:	http://www.hyjtkj.com/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref TmriOutAccessSoap

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page TmriOutAccessSoap Binding "TmriOutAccessSoap"

@section TmriOutAccessSoap_operations Operations of Binding "TmriOutAccessSoap"

  - @ref __ns1__GetVer

  - @ref __ns1__queryObjectOut

  - @ref __ns1__writeObjectOut

  - @ref __ns1__NetworkingQueryObjectOut

  - @ref __ns1__NetworkingWriteObjectOut

  - @ref __ns1__GetLoginParm

  - @ref __ns1__zjqueryObjectOut

  - @ref __ns1__GetVer_

  - @ref __ns1__queryObjectOut_

  - @ref __ns1__writeObjectOut_

  - @ref __ns1__NetworkingQueryObjectOut_

  - @ref __ns1__NetworkingWriteObjectOut_

  - @ref __ns1__GetLoginParm_

  - @ref __ns1__zjqueryObjectOut_

@section TmriOutAccessSoap_ports Endpoints of Binding "TmriOutAccessSoap"

  - http://192.168.216.16:9022/pnweb/TmriOutAccess.asmx

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TmriOutAccessSoap                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVer                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVer" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/GetVer"

  - Addressing input action: "http://www.hyjtkj.com/GetVer"

  - Addressing output action: "http://www.hyjtkj.com/GetVerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetVer*                       ns1__GetVer,
    // output parameters:
    _ns1__GetVerResponse               &ns1__GetVerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVer(
    struct soap *soap,
    // input parameters:
    _ns1__GetVer*                       ns1__GetVer,
    // output parameters:
    _ns1__GetVerResponse               &ns1__GetVerResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetVer SOAP
//gsoap ns1  service method-style:	GetVer document
//gsoap ns1  service method-encoding:	GetVer literal
//gsoap ns1  service method-input-action:	GetVer http://www.hyjtkj.com/GetVer
//gsoap ns1  service method-output-action:	GetVer http://www.hyjtkj.com/GetVerResponse
int __ns1__GetVer(
    _ns1__GetVer*                       ns1__GetVer,	///< Input parameter
    _ns1__GetVerResponse               &ns1__GetVerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryObjectOut                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__queryObjectOut" of service binding "TmriOutAccessSoap".
1

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/queryObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/queryObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/queryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	queryObjectOut SOAP
//gsoap ns1  service method-style:	queryObjectOut document
//gsoap ns1  service method-encoding:	queryObjectOut literal
//gsoap ns1  service method-input-action:	queryObjectOut http://www.hyjtkj.com/queryObjectOut
//gsoap ns1  service method-output-action:	queryObjectOut http://www.hyjtkj.com/queryObjectOutResponse
int __ns1__queryObjectOut(
    _ns1__queryObjectOut*               ns1__queryObjectOut,	///< Input parameter
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__writeObjectOut                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__writeObjectOut" of service binding "TmriOutAccessSoap".
1

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/writeObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/writeObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/writeObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__writeObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__writeObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	writeObjectOut SOAP
//gsoap ns1  service method-style:	writeObjectOut document
//gsoap ns1  service method-encoding:	writeObjectOut literal
//gsoap ns1  service method-input-action:	writeObjectOut http://www.hyjtkj.com/writeObjectOut
//gsoap ns1  service method-output-action:	writeObjectOut http://www.hyjtkj.com/writeObjectOutResponse
int __ns1__writeObjectOut(
    _ns1__writeObjectOut*               ns1__writeObjectOut,	///< Input parameter
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__NetworkingQueryObjectOut                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__NetworkingQueryObjectOut" of service binding "TmriOutAccessSoap".
2

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/NetworkingQueryObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/NetworkingQueryObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/NetworkingQueryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__NetworkingQueryObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__NetworkingQueryObjectOut*     ns1__NetworkingQueryObjectOut,
    // output parameters:
    _ns1__NetworkingQueryObjectOutResponse&ns1__NetworkingQueryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__NetworkingQueryObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__NetworkingQueryObjectOut*     ns1__NetworkingQueryObjectOut,
    // output parameters:
    _ns1__NetworkingQueryObjectOutResponse&ns1__NetworkingQueryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	NetworkingQueryObjectOut SOAP
//gsoap ns1  service method-style:	NetworkingQueryObjectOut document
//gsoap ns1  service method-encoding:	NetworkingQueryObjectOut literal
//gsoap ns1  service method-input-action:	NetworkingQueryObjectOut http://www.hyjtkj.com/NetworkingQueryObjectOut
//gsoap ns1  service method-output-action:	NetworkingQueryObjectOut http://www.hyjtkj.com/NetworkingQueryObjectOutResponse
int __ns1__NetworkingQueryObjectOut(
    _ns1__NetworkingQueryObjectOut*     ns1__NetworkingQueryObjectOut,	///< Input parameter
    _ns1__NetworkingQueryObjectOutResponse&ns1__NetworkingQueryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__NetworkingWriteObjectOut                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__NetworkingWriteObjectOut" of service binding "TmriOutAccessSoap".
2

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/NetworkingWriteObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/NetworkingWriteObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/NetworkingWriteObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__NetworkingWriteObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__NetworkingWriteObjectOut*     ns1__NetworkingWriteObjectOut,
    // output parameters:
    _ns1__NetworkingWriteObjectOutResponse&ns1__NetworkingWriteObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__NetworkingWriteObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__NetworkingWriteObjectOut*     ns1__NetworkingWriteObjectOut,
    // output parameters:
    _ns1__NetworkingWriteObjectOutResponse&ns1__NetworkingWriteObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	NetworkingWriteObjectOut SOAP
//gsoap ns1  service method-style:	NetworkingWriteObjectOut document
//gsoap ns1  service method-encoding:	NetworkingWriteObjectOut literal
//gsoap ns1  service method-input-action:	NetworkingWriteObjectOut http://www.hyjtkj.com/NetworkingWriteObjectOut
//gsoap ns1  service method-output-action:	NetworkingWriteObjectOut http://www.hyjtkj.com/NetworkingWriteObjectOutResponse
int __ns1__NetworkingWriteObjectOut(
    _ns1__NetworkingWriteObjectOut*     ns1__NetworkingWriteObjectOut,	///< Input parameter
    _ns1__NetworkingWriteObjectOutResponse&ns1__NetworkingWriteObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetLoginParm                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetLoginParm" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/GetLoginParm"

  - Addressing input action: "http://www.hyjtkj.com/GetLoginParm"

  - Addressing output action: "http://www.hyjtkj.com/GetLoginParmResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetLoginParm(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetLoginParm*                 ns1__GetLoginParm,
    // output parameters:
    _ns1__GetLoginParmResponse         &ns1__GetLoginParmResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetLoginParm(
    struct soap *soap,
    // input parameters:
    _ns1__GetLoginParm*                 ns1__GetLoginParm,
    // output parameters:
    _ns1__GetLoginParmResponse         &ns1__GetLoginParmResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetLoginParm SOAP
//gsoap ns1  service method-style:	GetLoginParm document
//gsoap ns1  service method-encoding:	GetLoginParm literal
//gsoap ns1  service method-input-action:	GetLoginParm http://www.hyjtkj.com/GetLoginParm
//gsoap ns1  service method-output-action:	GetLoginParm http://www.hyjtkj.com/GetLoginParmResponse
int __ns1__GetLoginParm(
    _ns1__GetLoginParm*                 ns1__GetLoginParm,	///< Input parameter
    _ns1__GetLoginParmResponse         &ns1__GetLoginParmResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__zjqueryObjectOut                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__zjqueryObjectOut" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/zjqueryObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/zjqueryObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/zjqueryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__zjqueryObjectOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__zjqueryObjectOut*             ns1__zjqueryObjectOut,
    // output parameters:
    _ns1__zjqueryObjectOutResponse     &ns1__zjqueryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__zjqueryObjectOut(
    struct soap *soap,
    // input parameters:
    _ns1__zjqueryObjectOut*             ns1__zjqueryObjectOut,
    // output parameters:
    _ns1__zjqueryObjectOutResponse     &ns1__zjqueryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	zjqueryObjectOut SOAP
//gsoap ns1  service method-style:	zjqueryObjectOut document
//gsoap ns1  service method-encoding:	zjqueryObjectOut literal
//gsoap ns1  service method-input-action:	zjqueryObjectOut http://www.hyjtkj.com/zjqueryObjectOut
//gsoap ns1  service method-output-action:	zjqueryObjectOut http://www.hyjtkj.com/zjqueryObjectOutResponse
int __ns1__zjqueryObjectOut(
    _ns1__zjqueryObjectOut*             ns1__zjqueryObjectOut,	///< Input parameter
    _ns1__zjqueryObjectOutResponse     &ns1__zjqueryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVer_                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetVer_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/GetVer"

  - Addressing input action: "http://www.hyjtkj.com/GetVer"

  - Addressing output action: "http://www.hyjtkj.com/GetVerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVer_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetVer*                       ns1__GetVer,
    // output parameters:
    _ns1__GetVerResponse               &ns1__GetVerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVer_(
    struct soap *soap,
    // input parameters:
    _ns1__GetVer*                       ns1__GetVer,
    // output parameters:
    _ns1__GetVerResponse               &ns1__GetVerResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetVer_ SOAP
//gsoap ns1  service method-style:	GetVer_ document
//gsoap ns1  service method-encoding:	GetVer_ literal
//gsoap ns1  service method-input-action:	GetVer_ http://www.hyjtkj.com/GetVer
//gsoap ns1  service method-output-action:	GetVer_ http://www.hyjtkj.com/GetVerResponse
int __ns1__GetVer_(
    _ns1__GetVer*                       ns1__GetVer,	///< Input parameter
    _ns1__GetVerResponse               &ns1__GetVerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryObjectOut_                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__queryObjectOut_" of service binding "TmriOutAccessSoap".
1

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/queryObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/queryObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/queryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__queryObjectOut*               ns1__queryObjectOut,
    // output parameters:
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	queryObjectOut_ SOAP
//gsoap ns1  service method-style:	queryObjectOut_ document
//gsoap ns1  service method-encoding:	queryObjectOut_ literal
//gsoap ns1  service method-input-action:	queryObjectOut_ http://www.hyjtkj.com/queryObjectOut
//gsoap ns1  service method-output-action:	queryObjectOut_ http://www.hyjtkj.com/queryObjectOutResponse
int __ns1__queryObjectOut_(
    _ns1__queryObjectOut*               ns1__queryObjectOut,	///< Input parameter
    _ns1__queryObjectOutResponse       &ns1__queryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__writeObjectOut_                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__writeObjectOut_" of service binding "TmriOutAccessSoap".
1

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/writeObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/writeObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/writeObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__writeObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__writeObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__writeObjectOut*               ns1__writeObjectOut,
    // output parameters:
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	writeObjectOut_ SOAP
//gsoap ns1  service method-style:	writeObjectOut_ document
//gsoap ns1  service method-encoding:	writeObjectOut_ literal
//gsoap ns1  service method-input-action:	writeObjectOut_ http://www.hyjtkj.com/writeObjectOut
//gsoap ns1  service method-output-action:	writeObjectOut_ http://www.hyjtkj.com/writeObjectOutResponse
int __ns1__writeObjectOut_(
    _ns1__writeObjectOut*               ns1__writeObjectOut,	///< Input parameter
    _ns1__writeObjectOutResponse       &ns1__writeObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__NetworkingQueryObjectOut_                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__NetworkingQueryObjectOut_" of service binding "TmriOutAccessSoap".
2

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/NetworkingQueryObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/NetworkingQueryObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/NetworkingQueryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__NetworkingQueryObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__NetworkingQueryObjectOut*     ns1__NetworkingQueryObjectOut,
    // output parameters:
    _ns1__NetworkingQueryObjectOutResponse&ns1__NetworkingQueryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__NetworkingQueryObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__NetworkingQueryObjectOut*     ns1__NetworkingQueryObjectOut,
    // output parameters:
    _ns1__NetworkingQueryObjectOutResponse&ns1__NetworkingQueryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	NetworkingQueryObjectOut_ SOAP
//gsoap ns1  service method-style:	NetworkingQueryObjectOut_ document
//gsoap ns1  service method-encoding:	NetworkingQueryObjectOut_ literal
//gsoap ns1  service method-input-action:	NetworkingQueryObjectOut_ http://www.hyjtkj.com/NetworkingQueryObjectOut
//gsoap ns1  service method-output-action:	NetworkingQueryObjectOut_ http://www.hyjtkj.com/NetworkingQueryObjectOutResponse
int __ns1__NetworkingQueryObjectOut_(
    _ns1__NetworkingQueryObjectOut*     ns1__NetworkingQueryObjectOut,	///< Input parameter
    _ns1__NetworkingQueryObjectOutResponse&ns1__NetworkingQueryObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__NetworkingWriteObjectOut_                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__NetworkingWriteObjectOut_" of service binding "TmriOutAccessSoap".
2

  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/NetworkingWriteObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/NetworkingWriteObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/NetworkingWriteObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__NetworkingWriteObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__NetworkingWriteObjectOut*     ns1__NetworkingWriteObjectOut,
    // output parameters:
    _ns1__NetworkingWriteObjectOutResponse&ns1__NetworkingWriteObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__NetworkingWriteObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__NetworkingWriteObjectOut*     ns1__NetworkingWriteObjectOut,
    // output parameters:
    _ns1__NetworkingWriteObjectOutResponse&ns1__NetworkingWriteObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	NetworkingWriteObjectOut_ SOAP
//gsoap ns1  service method-style:	NetworkingWriteObjectOut_ document
//gsoap ns1  service method-encoding:	NetworkingWriteObjectOut_ literal
//gsoap ns1  service method-input-action:	NetworkingWriteObjectOut_ http://www.hyjtkj.com/NetworkingWriteObjectOut
//gsoap ns1  service method-output-action:	NetworkingWriteObjectOut_ http://www.hyjtkj.com/NetworkingWriteObjectOutResponse
int __ns1__NetworkingWriteObjectOut_(
    _ns1__NetworkingWriteObjectOut*     ns1__NetworkingWriteObjectOut,	///< Input parameter
    _ns1__NetworkingWriteObjectOutResponse&ns1__NetworkingWriteObjectOutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetLoginParm_                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetLoginParm_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/GetLoginParm"

  - Addressing input action: "http://www.hyjtkj.com/GetLoginParm"

  - Addressing output action: "http://www.hyjtkj.com/GetLoginParmResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetLoginParm_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetLoginParm*                 ns1__GetLoginParm,
    // output parameters:
    _ns1__GetLoginParmResponse         &ns1__GetLoginParmResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetLoginParm_(
    struct soap *soap,
    // input parameters:
    _ns1__GetLoginParm*                 ns1__GetLoginParm,
    // output parameters:
    _ns1__GetLoginParmResponse         &ns1__GetLoginParmResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetLoginParm_ SOAP
//gsoap ns1  service method-style:	GetLoginParm_ document
//gsoap ns1  service method-encoding:	GetLoginParm_ literal
//gsoap ns1  service method-input-action:	GetLoginParm_ http://www.hyjtkj.com/GetLoginParm
//gsoap ns1  service method-output-action:	GetLoginParm_ http://www.hyjtkj.com/GetLoginParmResponse
int __ns1__GetLoginParm_(
    _ns1__GetLoginParm*                 ns1__GetLoginParm,	///< Input parameter
    _ns1__GetLoginParmResponse         &ns1__GetLoginParmResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__zjqueryObjectOut_                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__zjqueryObjectOut_" of service binding "TmriOutAccessSoap".


  - SOAP document/literal style messaging

  - Action: "http://www.hyjtkj.com/zjqueryObjectOut"

  - Addressing input action: "http://www.hyjtkj.com/zjqueryObjectOut"

  - Addressing output action: "http://www.hyjtkj.com/zjqueryObjectOutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__zjqueryObjectOut_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__zjqueryObjectOut*             ns1__zjqueryObjectOut,
    // output parameters:
    _ns1__zjqueryObjectOutResponse     &ns1__zjqueryObjectOutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__zjqueryObjectOut_(
    struct soap *soap,
    // input parameters:
    _ns1__zjqueryObjectOut*             ns1__zjqueryObjectOut,
    // output parameters:
    _ns1__zjqueryObjectOutResponse     &ns1__zjqueryObjectOutResponse
  );
@endcode

C++ proxy class (defined in soapTmriOutAccessSoapProxy.h):
@code
  class TmriOutAccessSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTmriOutAccessSoapService.h):
@code
  class TmriOutAccessSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	zjqueryObjectOut_ SOAP
//gsoap ns1  service method-style:	zjqueryObjectOut_ document
//gsoap ns1  service method-encoding:	zjqueryObjectOut_ literal
//gsoap ns1  service method-input-action:	zjqueryObjectOut_ http://www.hyjtkj.com/zjqueryObjectOut
//gsoap ns1  service method-output-action:	zjqueryObjectOut_ http://www.hyjtkj.com/zjqueryObjectOutResponse
int __ns1__zjqueryObjectOut_(
    _ns1__zjqueryObjectOut*             ns1__zjqueryObjectOut,	///< Input parameter
    _ns1__zjqueryObjectOutResponse     &ns1__zjqueryObjectOutResponse	///< Output parameter
);

/**

@page TmriOutAccessSoap Binding "TmriOutAccessSoap"

@section TmriOutAccessSoap_policy_enablers Policy Enablers of Binding "TmriOutAccessSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://www.hyjtkj.com/"

  - <GetVer> @ref _ns1__GetVer
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVer(struct soap*, _ns1__GetVer*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVer(struct soap*, _ns1__GetVer*);
    @endcode

  - <GetVerResponse> @ref _ns1__GetVerResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVerResponse(struct soap*, _ns1__GetVerResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVerResponse(struct soap*, _ns1__GetVerResponse*);
    @endcode

  - <queryObjectOut> @ref _ns1__queryObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__queryObjectOut(struct soap*, _ns1__queryObjectOut*);
    @endcode

  - <queryObjectOutResponse> @ref _ns1__queryObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__queryObjectOutResponse(struct soap*, _ns1__queryObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__queryObjectOutResponse(struct soap*, _ns1__queryObjectOutResponse*);
    @endcode

  - <writeObjectOut> @ref _ns1__writeObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__writeObjectOut(struct soap*, _ns1__writeObjectOut*);
    @endcode

  - <writeObjectOutResponse> @ref _ns1__writeObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__writeObjectOutResponse(struct soap*, _ns1__writeObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__writeObjectOutResponse(struct soap*, _ns1__writeObjectOutResponse*);
    @endcode

  - <NetworkingQueryObjectOut> @ref _ns1__NetworkingQueryObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__NetworkingQueryObjectOut(struct soap*, _ns1__NetworkingQueryObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__NetworkingQueryObjectOut(struct soap*, _ns1__NetworkingQueryObjectOut*);
    @endcode

  - <NetworkingQueryObjectOutResponse> @ref _ns1__NetworkingQueryObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__NetworkingQueryObjectOutResponse(struct soap*, _ns1__NetworkingQueryObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__NetworkingQueryObjectOutResponse(struct soap*, _ns1__NetworkingQueryObjectOutResponse*);
    @endcode

  - <NetworkingWriteObjectOut> @ref _ns1__NetworkingWriteObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__NetworkingWriteObjectOut(struct soap*, _ns1__NetworkingWriteObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__NetworkingWriteObjectOut(struct soap*, _ns1__NetworkingWriteObjectOut*);
    @endcode

  - <NetworkingWriteObjectOutResponse> @ref _ns1__NetworkingWriteObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__NetworkingWriteObjectOutResponse(struct soap*, _ns1__NetworkingWriteObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__NetworkingWriteObjectOutResponse(struct soap*, _ns1__NetworkingWriteObjectOutResponse*);
    @endcode

  - <GetLoginParm> @ref _ns1__GetLoginParm
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetLoginParm(struct soap*, _ns1__GetLoginParm*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetLoginParm(struct soap*, _ns1__GetLoginParm*);
    @endcode

  - <GetLoginParmResponse> @ref _ns1__GetLoginParmResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetLoginParmResponse(struct soap*, _ns1__GetLoginParmResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetLoginParmResponse(struct soap*, _ns1__GetLoginParmResponse*);
    @endcode

  - <zjqueryObjectOut> @ref _ns1__zjqueryObjectOut
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__zjqueryObjectOut(struct soap*, _ns1__zjqueryObjectOut*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__zjqueryObjectOut(struct soap*, _ns1__zjqueryObjectOut*);
    @endcode

  - <zjqueryObjectOutResponse> @ref _ns1__zjqueryObjectOutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__zjqueryObjectOutResponse(struct soap*, _ns1__zjqueryObjectOutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__zjqueryObjectOutResponse(struct soap*, _ns1__zjqueryObjectOutResponse*);
    @endcode

  - <string> (use wsdl2h option -g to auto-generate)

*/

/* End of TmriOutAccess.h */
